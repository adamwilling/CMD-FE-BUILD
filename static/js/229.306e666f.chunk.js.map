{"version":3,"file":"static/js/229.306e666f.chunk.js","mappings":"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","sources":["assets/icons/more.svg","assets/icons/previous_page.svg","assets/icons/next_page.svg","components/AppPagination.js","assets/icons/search.svg","components/AppSearch.js","components/Loading.js","components/Select.js","customHooks/useOnClickOutside.js","redux/selectors.js","views/employees/EmployeesFeatures/DeleteEmployee.js","views/employees/EmployeesFeatures/LockEmployee.js","views/employees/EmployeesFeatures/ResetPassword.js","assets/icons/department_level.svg","views/employees/EmployeesFeatures/SubmitEmployee/FormSelectDepartment.js","views/employees/EmployeesFeatures/SubmitEmployee/FormSelectPosition.js","views/employees/EmployeesFeatures/SubmitEmployee/FormSelectTeam.js","views/employees/EmployeesFeatures/SubmitEmployee/FormSubmitEmployee.js","views/employees/EmployeeRow.js","views/employees/EmployeesFeatures/AddEmployee.js","views/employees/DepartmentsPage/DepartmentDetail.js","views/employees/DepartmentsPage/DepartmentsFeatures/DeleteDepartment.js","views/employees/DepartmentsPage/DepartmentsFeatures/Positions.js","views/employees/DepartmentsPage/DepartmentsFeatures/FormSubmitDepartment.js","views/employees/DepartmentsPage/DepartmentRow.js","views/employees/DepartmentsPage/DepartmentsFeatures/AddDepartment.js","views/employees/DepartmentsPage/DepartmentsMainPage.js","views/employees/DepartmentsPage/ButtonShowDepartments.js","views/employees/TeamsPage/TeamDetail.js","views/employees/TeamsPage/TeamsFeatures/DeleteTeam.js","views/employees/TeamsPage/TeamsFeatures/Positions.js","views/employees/TeamsPage/TeamsFeatures/FormSubmitTeam.js","views/employees/TeamsPage/TeamRow.js","views/employees/TeamsPage/TeamsFeatures/AddTeam.js","views/employees/TeamsPage/TeamsMainPage.js","views/employees/TeamsPage/ButtonShowTeams.js","views/employees/RolesPage/RolesFeatures/FormSubmitRole.js","views/employees/RolesPage/RolesFeatures/EditRole.js","views/employees/RolesPage/DeleteRole.js","views/employees/RolesPage/RoleItem.js","views/employees/RolesPage/RolesFeatures/AddRole.js","views/employees/RolesPage/RolesMainPage.js","views/employees/RolesPage/ButtonShowRoles.js","assets/icons/download.svg","views/employees/EmployeesFeatures/ExportDataToCSV.js","views/employees/EmployeesFeatures/FiltersAdvanced.js","views/employees/EmployeesMainPage.js"],"sourcesContent":["var _ellipse, _ellipse2, _ellipse3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMore(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 4,\n    height: 15,\n    viewBox: \"0 0 4 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 1.69988,\n    cy: 2.34366,\n    rx: 1.67595,\n    ry: 1.43204,\n    fill: \"#6ECBE8\"\n  })), _ellipse2 || (_ellipse2 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 1.69988,\n    cy: 7.49905,\n    rx: 1.67595,\n    ry: 1.43204,\n    fill: \"#6ECBE8\"\n  })), _ellipse3 || (_ellipse3 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 1.69988,\n    cy: 12.6545,\n    rx: 1.67595,\n    ry: 1.43205,\n    fill: \"#6ECBE8\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMore);\nexport default __webpack_public_path__ + \"static/media/more.8e2afbbc9f87eec79c47359d32ca0ded.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPreviousPage(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 18,\n    viewBox: \"0 0 12 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.1222 17.3736C11.2732 17.2301 11.393 17.0596 11.4748 16.8719C11.5566 16.6842 11.5986 16.4829 11.5986 16.2797C11.5986 16.0765 11.5566 15.8753 11.4748 15.6876C11.393 15.4999 11.2732 15.3293 11.1222 15.1858L4.80114 9.16531L11.1222 3.14483C11.4268 2.8547 11.5979 2.4612 11.5979 2.0509C11.5979 1.6406 11.4268 1.2471 11.1222 0.95697C10.8176 0.666842 10.4044 0.503853 9.97366 0.503853C9.54287 0.503853 9.12973 0.666842 8.82511 0.956971L1.34736 8.07914C1.19633 8.22269 1.07651 8.3932 0.994762 8.58091C0.913009 8.76862 0.87093 8.96985 0.87093 9.17307C0.87093 9.37629 0.913009 9.57751 0.994762 9.76522C1.07651 9.95293 1.19633 10.1234 1.34736 10.267L8.82511 17.3892C9.44419 17.9788 10.4868 17.9788 11.1222 17.3736Z\",\n    fill: \"#C7D6EC\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPreviousPage);\nexport default __webpack_public_path__ + \"static/media/previous_page.1efdd0a65a10ef3fe9674455dfa522ca.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgNextPage(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 18,\n    viewBox: \"0 0 12 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.10265 0.959606C0.951626 1.10316 0.831807 1.27367 0.750054 1.46138C0.668302 1.64909 0.626221 1.85031 0.626221 2.05353C0.626221 2.25675 0.668302 2.45798 0.750054 2.64569C0.831807 2.8334 0.951626 3.00391 1.10265 3.14746L7.42371 9.16794L1.10265 15.1884C0.79804 15.4786 0.62691 15.872 0.626909 16.2824C0.626909 16.6927 0.798039 17.0862 1.10265 17.3763C1.40726 17.6664 1.82041 17.8294 2.2512 17.8294C2.68198 17.8294 3.09513 17.6664 3.39974 17.3763L10.8775 10.2541C11.0285 10.1106 11.1483 9.94005 11.2301 9.75234C11.3118 9.56463 11.3539 9.36341 11.3539 9.16018C11.3539 8.95697 11.3118 8.75574 11.2301 8.56803C11.1483 8.38032 11.0285 8.20981 10.8775 8.06626L3.39974 0.944089C2.78067 0.354455 1.73802 0.354455 1.10265 0.959606Z\",\n    fill: \"#C7D6EC\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNextPage);\nexport default __webpack_public_path__ + \"static/media/next_page.ce80b845b5a5e610c849929f004a994c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react'\r\nimport { Image, Pagination } from 'react-bootstrap'\r\n\r\nimport previousPageIcon from '../assets/icons/previous_page.svg'\r\nimport nextPageIcon from '../assets/icons/next_page.svg'\r\n\r\n/*\r\n    Truyền vào 2 props:\r\n    1. pagination: một đối tượng chứa 3 thuộc tính:\r\n    + page: trang hiện tại\r\n    + limit: số dòng trên mỗi trang\r\n    + totalItem: tổng số Item của danh sách\r\n    2. onPageChange: một hàm callback nhận vào một đối số là giá trị trang mới khi click chuột vào button\r\n*/\r\n\r\nconst AppPagination = ({ pagination, onPageChange }) => {\r\n    // Lấy các đối tượng từ props pagination\r\n    let { page, limit, totalItem } = pagination\r\n    page = Number.parseInt(page)\r\n\r\n    // Tính toán tổng số trang\r\n    const totalPage = Math.ceil(totalItem / limit)\r\n\r\n    // State lưu chiều rộng hiện tại của trình duyệt\r\n    const [width, setWidth] = useState(window.innerWidth)\r\n\r\n    // Hàm cập nhật state width mỗi khi trình duyệt thay đổi độ rộng\r\n    const updateWidth = () => {\r\n        setWidth(window.innerWidth)\r\n    }\r\n\r\n    // Effect có tác dụng thêm hàm cập nhật state width cho event resize\r\n    useEffect(() => {\r\n        window.addEventListener('resize', updateWidth)\r\n        return () => {\r\n            window.removeEventListener('resize', updateWidth)\r\n        }\r\n    }, [width])\r\n\r\n    // Hàm này sẽ trả về một mảng lưu những số (hoặc dấu ...) cần hiển thị ra UI tùy thuộc vào chiều rộng của màn hình (đã responsive)\r\n    const fetchListPage = () => {\r\n        // Khởi tạo listPage là mảng rỗng\r\n        const listPage = []\r\n\r\n        // Thực hiện push những gì cần hiển thị vào listPage tùy thuộc vào giá trị cửa width\r\n        if (width < 576) {\r\n            if (totalPage >= 8) {\r\n                if (page < 2) {\r\n                    for (let i = 1; i <= 2; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                    listPage.push(\"...\")\r\n                    listPage.push(totalPage)\r\n                }\r\n                else if (page > totalPage - 1) {\r\n                    listPage.push(1)\r\n                    listPage.push(\"...\")\r\n                    for (let i = totalPage - 1; i <= totalPage; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                }\r\n                else {\r\n                    listPage.push(page - 1)\r\n                    listPage.push(page)\r\n                    listPage.push(page + 1)\r\n                }\r\n            }\r\n            else if (totalPage >= 5) {\r\n                if (page <= 2) {\r\n                    for (let i = 1; i <= 3; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                    listPage.push(\"...\")\r\n                    listPage.push(totalPage)\r\n                }\r\n                else if (page > totalPage - 2) {\r\n                    listPage.push(1)\r\n                    listPage.push(\"...\")\r\n                    for (let i = totalPage - 2; i <= totalPage; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                }\r\n                else {\r\n                    listPage.push(1)\r\n                    listPage.push(\"...\")\r\n                    for (let i = page - 1; i <= page + 1; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                    listPage.push(\"...\")\r\n                    listPage.push(totalPage)\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 1; i <= totalPage; ++i) {\r\n                    listPage.push(i)\r\n                }\r\n            }\r\n        }\r\n        else if (width < 992) {\r\n            if (totalPage >= 8) {\r\n                if (page < 3) {\r\n                    for (let i = 1; i <= 3; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                    listPage.push(\"...\")\r\n                    listPage.push(totalPage)\r\n                }\r\n                else if (page > totalPage - 2) {\r\n                    listPage.push(1)\r\n                    listPage.push(\"...\")\r\n                    for (let i = totalPage - 2; i <= totalPage; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                }\r\n                else {\r\n                    listPage.push(1)\r\n                    listPage.push(\"...\")\r\n                    for (let i = page - 1; i <= page + 1; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                    listPage.push(\"...\")\r\n                    listPage.push(totalPage)\r\n                }\r\n            }\r\n            else if (totalPage >= 5) {\r\n                if (page <= 2) {\r\n                    for (let i = 1; i <= 3; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                    listPage.push(\"...\")\r\n                    listPage.push(totalPage)\r\n                }\r\n                else if (page > totalPage - 2) {\r\n                    listPage.push(1)\r\n                    listPage.push(\"...\")\r\n                    for (let i = totalPage - 2; i <= totalPage; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                }\r\n                else {\r\n                    listPage.push(1)\r\n                    listPage.push(\"...\")\r\n                    for (let i = page - 1; i <= page + 1; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                    listPage.push(\"...\")\r\n                    listPage.push(totalPage)\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 1; i <= totalPage; ++i) {\r\n                    listPage.push(i)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (totalPage >= 8) {\r\n                if (page < 4) {\r\n                    for (let i = 1; i <= 4; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                    listPage.push(\"...\")\r\n                    listPage.push(totalPage)\r\n                }\r\n                else if (page > totalPage - 3) {\r\n                    listPage.push(1)\r\n                    listPage.push(\"...\")\r\n                    for (let i = totalPage - 3; i <= totalPage; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                }\r\n                else {\r\n                    listPage.push(1)\r\n                    listPage.push(\"...\")\r\n                    for (let i = page - 2; i <= page + 2; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                    listPage.push(\"...\")\r\n                    listPage.push(totalPage)\r\n                }\r\n            }\r\n            else if (totalPage >= 5) {\r\n                if (page <= 2) {\r\n                    for (let i = 1; i <= 3; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                    listPage.push(\"...\")\r\n                    listPage.push(totalPage)\r\n                }\r\n                else if (page > totalPage - 2) {\r\n                    listPage.push(1)\r\n                    listPage.push(\"...\")\r\n                    for (let i = totalPage - 2; i <= totalPage; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                }\r\n                else {\r\n                    listPage.push(1)\r\n                    listPage.push(\"...\")\r\n                    for (let i = page - 1; i <= page + 1; ++i) {\r\n                        listPage.push(i)\r\n                    }\r\n                    listPage.push(\"...\")\r\n                    listPage.push(totalPage)\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 1; i <= totalPage; ++i) {\r\n                    listPage.push(i)\r\n                }\r\n            }\r\n        }\r\n        return listPage\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-table m-auto\">\r\n            <Pagination\r\n                className=\"col\"\r\n                size={\r\n                    width < 576 ? \"sm\" : (width < 992 ? \"\" : \"lg\")\r\n                }\r\n            >\r\n                <Pagination.Item\r\n                    disabled={page <= 1}\r\n                    onClick={() => onPageChange(page - 1)}\r\n                >\r\n                    <Image src={previousPageIcon} />\r\n                </Pagination.Item>\r\n                {\r\n                    fetchListPage().map((pageItem, index) => {\r\n                        if (pageItem === page) {\r\n                            return (\r\n                                <Pagination.Item\r\n                                    key={index}\r\n                                    active\r\n                                >\r\n                                    {pageItem}\r\n                                </Pagination.Item>\r\n                            )\r\n                        }\r\n                        else if (pageItem === \"...\") {\r\n                            return (\r\n                                <Pagination.Item\r\n                                    disabled\r\n                                    key={index}\r\n                                >\r\n                                    {pageItem}\r\n                                </Pagination.Item>\r\n                            )\r\n                        }\r\n                        else {\r\n                            return (\r\n                                <Pagination.Item\r\n                                    key={index}\r\n                                    onClick={() => onPageChange(pageItem)}\r\n                                >\r\n                                    {pageItem}\r\n                                </Pagination.Item>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n                <Pagination.Item\r\n                    disabled={page >= totalPage}\r\n                    onClick={() => onPageChange(page + 1)}\r\n                >\r\n                    <Image src={nextPageIcon} />\r\n                </Pagination.Item>\r\n            </Pagination>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(AppPagination)","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 23,\n    height: 24,\n    viewBox: \"0 0 23 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.58332 17.75C11.2843 17.7497 12.9363 17.1802 14.2763 16.1323L18.4891 20.3452L19.8442 18.9901L15.6314 14.7773C16.6798 13.4372 17.2496 11.7848 17.25 10.0833C17.25 5.85613 13.8105 2.41667 9.58332 2.41667C5.35612 2.41667 1.91666 5.85613 1.91666 10.0833C1.91666 14.3105 5.35612 17.75 9.58332 17.75ZM9.58332 4.33333C12.7544 4.33333 15.3333 6.91221 15.3333 10.0833C15.3333 13.2545 12.7544 15.8333 9.58332 15.8333C6.4122 15.8333 3.83332 13.2545 3.83332 10.0833C3.83332 6.91221 6.4122 4.33333 9.58332 4.33333Z\",\n    fill: \"#2B99FF\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.9365 8.72825C11.2997 9.09242 11.5 9.5735 11.5 10.0833H13.4167C13.4175 9.57966 13.3185 9.08081 13.1254 8.61563C12.9323 8.15045 12.6489 7.72816 12.2916 7.37317C10.8407 5.92416 8.32505 5.92416 6.87509 7.37317L8.22826 8.73017C8.95659 8.00375 10.212 8.00567 10.9365 8.72825Z\",\n    fill: \"#B3D5F4\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.6e9d1a33bc6850a2bf9030c7f5248857.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport { Image } from 'react-bootstrap'\r\n\r\nimport searchIcon from '../assets/icons/search.svg'\r\n/*\r\n    Truyền vào 2 props:\r\n    1. value: giá trị của state giữ giá trị đang tìm kiếm\r\n    2. onSearch: hàm callback sẽ set lại giá trị của state khi người dung nhập giá trị mới\r\n*/\r\nconst AppSearch = ({ value, onSearch }) => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div\r\n                className=\"d-inline-flex form-control py-1\"\r\n                style={{ borderRadius: \"0.5rem\" }}\r\n            >\r\n                <Image\r\n                    src={searchIcon}\r\n                    className=\"mx-auto h-100\"\r\n                    style={{\r\n                        marginTop: \"0.1rem\"\r\n                    }}\r\n                />\r\n                <input\r\n                    className=\"w-100\"\r\n                    type=\"search\"\r\n                    style={{\r\n                        border: \"none\",\r\n                        outline: \"none\",\r\n                        color: \"#2F6BB1\",\r\n                        fontSize: \"14px\"\r\n                    }}\r\n                    placeholder=\"Tìm kiếm...\"\r\n                    value={value || \"\"}\r\n                    onChange={(e) => onSearch(e.target.value)}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(AppSearch)","import React from 'react'\r\n\r\nconst Loading = props => {\r\n  return (\r\n    <div className=\"py-3 text-center\">\r\n        <div className=\"spinner-border text-primary\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading","import React, { useRef, useState } from 'react'\r\nimport { ListGroup } from 'react-bootstrap'\r\n\r\nimport useOnClickOutside from '~/customHooks/useOnClickOutside'\r\n\r\nconst Select = ({ index, value, placeholder, displayValue, options, onSelect, ...props }) => {\r\n    const [visible, setVisible] = useState(false)\r\n    const ref = useRef()        // Ref form select Value\r\n\r\n    useOnClickOutside(ref, () => setVisible(false))     // Hàm xử lý đóng form khi click ra ngoài\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            onClick={() => setVisible(!visible)}\r\n            className=\"form-select\"\r\n            {...props}\r\n        >\r\n            {value[displayValue] || placeholder}\r\n            <div className=\"select\">\r\n                {\r\n                    visible && options.map((item, key) => (\r\n                        <ListGroup.Item\r\n                            action\r\n                            key={key}\r\n                            onClick={() => onSelect(index, item)}\r\n                            active={value[displayValue] === item[displayValue]}\r\n                        >\r\n                            {item[displayValue]}\r\n                        </ListGroup.Item>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select","import { useEffect } from \"react\"\r\n\r\nexport default function useOnClickOutside(ref, handler) {\r\n    useEffect(() => {\r\n        const listener = (event) => {\r\n            // Do nothing if clicking ref's element or descendent elements\r\n            if (!ref.current || ref.current.contains(event.target)) {\r\n                return\r\n            }\r\n            handler(event);\r\n        };\r\n        document.addEventListener(\"mousedown\", listener)\r\n        document.addEventListener(\"touchstart\", listener)\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", listener)\r\n            document.removeEventListener(\"touchstart\", listener)\r\n        }\r\n    },\r\n        // Add ref and handler to effect dependencies\r\n        // It's worth noting that because passed in handler is a new ...\r\n        // ... function on every render that will cause this effect ...\r\n        // ... callback/cleanup to run every render. It's not a big deal ...\r\n        // ... but to optimize you can wrap handler in useCallback before ...\r\n        // ... passing it into this hook.\r\n        [ref, handler])\r\n}","export const employeesSelector = (state) => state.employees\r\nexport const departmentsSelector = (state) => state.departments\r\nexport const teamsSelector = (state) => state.teams\r\nexport const rolesSelector = (state) => state.roles\r\nexport const tasksSelector = (state) => state.tasks\r\nexport const proposalsSelector = (state) => state.proposals\r\nexport const postsSelector = state=>state.posts","import React from 'react'\r\n\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { deleteEmployee } from '~/redux/employeesSlice'\r\n\r\nconst DeleteEmployee = ({ visible, setVisible, employeeInfo }) => {\r\n    const dispatch = useDispatch()\r\n    const handleDelete = (employeeId) => {\r\n        dispatch(deleteEmployee(employeeId))\r\n        setVisible(false)\r\n    }\r\n\r\n    return (\r\n                    <Modal\r\n                        scrollable\r\n                        show={visible}\r\n                        onHide={() => setVisible(false)}\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>XÓA NHÂN VIÊN</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            Bạn có chắc chắn muốn xóa nhân viên {\" \"}\r\n                            <span className=\"fw-bolder\">\r\n                                {employeeInfo.name}\r\n                            </span> khỏi ký túc xá?\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                onClick={() => setVisible(false)}\r\n                            >\r\n                                Hủy\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"danger\"\r\n                                onClick={() => handleDelete(employeeInfo.id)}\r\n                            >\r\n                                Xóa\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n    )\r\n}\r\n\r\nexport default DeleteEmployee","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nimport { updateEmployee } from '~/redux/employeesSlice'\r\n\r\n\r\nconst LockEmployee = ({ visible, setVisible, employeeInfo }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    // Hàm xử lý khóa tài khoản\r\n    const handleLock = (employeeInfo) => {\r\n        dispatch(updateEmployee({\r\n            ...employeeInfo,\r\n            active: !employeeInfo.active\r\n        }))\r\n        setVisible(false)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            scrollable\r\n            show={visible}\r\n            onHide={() => setVisible(false)}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    {\r\n                        employeeInfo.active ? <>Khóa tài khoản - {employeeInfo.name}</> : <>Mở khóa tài khoản - {employeeInfo.name}</>\r\n                    }\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {\r\n                    employeeInfo.active ? <>\r\n                        Bạn có chắc chắn muốn khóa tài khoản {\" \"}\r\n                        <span className=\"fw-bolder\">\r\n                            {employeeInfo.name}\r\n                        </span>?\r\n                    </> : <>\r\n                        Bạn có chắc chắn muốn mở khóa khóa tài khoản {\" \"}\r\n                        <span className=\"fw-bolder\">\r\n                            {employeeInfo.name}\r\n                        </span>?\r\n                    </>\r\n                }\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button\r\n                    variant=\"secondary\"\r\n                    onClick={() => setVisible(false)}\r\n                >\r\n                    Hủy\r\n                </Button>\r\n                <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => handleLock(employeeInfo)}\r\n                >\r\n                    Xác nhận\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default LockEmployee","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button, Dropdown, Form, Modal } from 'react-bootstrap'\r\nimport { BsShieldLock } from 'react-icons/bs'\r\n\r\nimport { updateEmployee } from '~/redux/employeesSlice'\r\n\r\n\r\nconst ResetPassword = ({ employee }) => {\r\n    const dispatch = useDispatch()\r\n    const [visibleResetPassword, setVisibleResetPassword] = useState(false)              // State hiển thị thông báo xác nhận xóa nhân viên\r\n    const [info, setInfo] = useState({\r\n        password: \"\",\r\n        repassword: \"\"\r\n    })\r\n\r\n    const handleInputChange = (e) => {\r\n        setInfo({\r\n            ...info,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    /* Xử lý Submit Form */\r\n    const [validated, setValidated] = useState(false)\r\n    const handleResetPassword = (e) => {\r\n        const form = e.currentTarget\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n        }\r\n        setValidated(true)\r\n        if (form.checkValidity() === true) {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            dispatch(updateEmployee({\r\n                ...employee,\r\n                user: {\r\n                    ...info.user,\r\n                    password: info.password\r\n                }\r\n            }))\r\n            setVisibleResetPassword(false)\r\n        }\r\n    }\r\n    //\r\n\r\n    return (\r\n        <>\r\n            <Dropdown.Item\r\n                component=\"button\"\r\n                onClick={() => setVisibleResetPassword(!visibleResetPassword)}\r\n            >\r\n                <BsShieldLock /> Cấp lại mật khẩu\r\n            </Dropdown.Item>\r\n            <Modal\r\n                scrollable\r\n                centered\r\n                size=\"lg\"\r\n                show={visibleResetPassword}\r\n                onHide={() => setVisibleResetPassword(false)}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Cấp lại mật khẩu - {employee.name}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form\r\n                        className=\"modal-body\"\r\n                        noValidate\r\n                        validated={validated}\r\n                        onSubmit={handleResetPassword}\r\n                    >\r\n                        <div className=\"mb-3\">\r\n                            <Form.Label htmlFor=\"password\">Mật khẩu:</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Nhập mật khẩu...\"\r\n                                value={info.password}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Vui lòng nhập mật khẩu.\r\n                            </Form.Control.Feedback>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <Form.Label htmlFor=\"repassword\">Nhập lại mật khẩu:</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                name=\"repassword\"\r\n                                placeholder=\"Nhập lại mật khẩu...\"\r\n                                value={info.repassword}\r\n                                onChange={handleInputChange}\r\n                                isInvalid={!(info.password === info.repassword)}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Mật khẩu nhập lại không trùng khớp\r\n                            </Form.Control.Feedback>\r\n                        </div>\r\n                        <Button variant=\"primary\">\r\n                            Xác nhận\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResetPassword","var _rect;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDepartmentLevel(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 4,\n    height: 11,\n    viewBox: \"0 0 4 11\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.561768,\n    y: 0.394409,\n    width: 2.78681,\n    height: 10.6056,\n    fill: \"#52ACFF\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDepartmentLevel);\nexport default __webpack_public_path__ + \"static/media/department_level.bd70750bd9cf42f11e43678973ff35ad.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useRef, useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { Form, ListGroup } from 'react-bootstrap'\r\n\r\nimport departmentLevelIcon from '~/assets/icons/department_level.svg'\r\nimport useOnClickOutside from '~/customHooks/useOnClickOutside'\r\n\r\nconst propTypes = {\r\n    index: PropTypes.number,\r\n    currentDepartment: PropTypes.object.isRequired,\r\n    onDepartmentChange: PropTypes.func.isRequired,\r\n    departments: PropTypes.array.isRequired\r\n}\r\n\r\nconst FormSelectDepartment = ({ index, currentDepartment, onDepartmentChange, departments }) => {\r\n\r\n    const [visible, setVisible] = useState(false)       // State quản lý hiển thị danh sách phòng ban\r\n\r\n    const ref = useRef()        // Ref form select department\r\n\r\n    useOnClickOutside(ref, () => setVisible(false))     // Hàm xử lý đóng form select department khi click ra ngoài\r\n\r\n    // Chuỗi lệnh hiển thị tên phòng ban phân cấp\r\n    const selectDepartmentElement = []\r\n    if (index === null) {\r\n        selectDepartmentElement.push(\r\n            <ListGroup.Item\r\n                action\r\n                style={{\r\n                    borderRadius: \"none\",\r\n                    textAlign: \"center\"\r\n                }}\r\n                onClick={() => onDepartmentChange(index, {\r\n                    id: -1,\r\n                    level: 0,\r\n                    name: \"Không có phòng ban cha\"\r\n                })}\r\n                active={currentDepartment.id === null}\r\n            >\r\n                Không có phòng ban cha\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n    const recursiveDepartmentChild = (department_parent) => {\r\n        departments.forEach((department_child) => {\r\n            if (department_parent.id === department_child.fatherDepartmentId) {\r\n                selectDepartmentElement.push(\r\n                    <ListGroup.Item\r\n                        action\r\n                        key={department_child.id}\r\n                        style={{\r\n                            paddingLeft: department_child.level * 20,\r\n                            borderRadius: \"none\"\r\n                        }}\r\n                        onClick={() => onDepartmentChange(index, department_child)}\r\n                        active={currentDepartment?.id === department_child.id}\r\n                    >\r\n                        <img src={departmentLevelIcon} alt=\"Panel\" />\r\n                        <span className=\"ps-2\" />\r\n                        {department_child.name}\r\n                    </ListGroup.Item>)\r\n                recursiveDepartmentChild(department_child, department_child.level + 1)\r\n            }\r\n        })\r\n    }\r\n    const traverseDepartment = () => {\r\n        departments.forEach((department) => {\r\n            if (department.fatherDepartmentId === -1) {\r\n                selectDepartmentElement.push(\r\n                    <ListGroup.Item\r\n                        action\r\n                        key={department.id}\r\n                        style={{\r\n                            paddingLeft: department.level * 20,\r\n                            borderRadius: \"none\"\r\n                        }}\r\n                        onClick={() => onDepartmentChange(index, department)}\r\n                        active={currentDepartment?.name === department.name}\r\n                    >\r\n                        <img src={departmentLevelIcon} alt=\"Panel\" />\r\n                        <span className=\"ps-2\" />\r\n                        {department.name}\r\n                    </ListGroup.Item>)\r\n                recursiveDepartmentChild(department)\r\n            }\r\n        })\r\n    }\r\n    traverseDepartment();\r\n    //\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            onClick={() => setVisible(!visible)}\r\n            className=\"form-select\"\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                name=\"department\"\r\n                placeholder=\"Chọn phòng ban\"\r\n                value={currentDepartment?.name || \"\"}\r\n                onChange={() => {\r\n\r\n                }}\r\n                readOnly\r\n                required\r\n                style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"none\",\r\n                    border: \"none\",\r\n                    outline: \"none\",\r\n                    cursor: \"pointer\",\r\n                    color: \"#2f6bb1\",\r\n                    padding: \"0\"\r\n                }}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n                Vui lòng chọn phòng ban\r\n            </Form.Control.Feedback>\r\n\r\n            <div className=\"select\">\r\n                {(visible) && selectDepartmentElement}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFormSelectDepartment.propTypes = propTypes\r\n\r\nexport default FormSelectDepartment","import React, { useRef, useState } from 'react'\r\n\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport useOnClickOutside from '../../../../customHooks/useOnClickOutside'\r\n\r\nconst FormSelectPosition = ({ index, current, positions, onChange }) => {\r\n    const [visible, setVisible] = useState(false)       // State quản lý hiển thị danh sách phòng ban\r\n\r\n    const ref = useRef()        // Ref form select position\r\n\r\n    useOnClickOutside(ref, () => setVisible(false))     // Hàm xử lý đóng form select position khi click ra ngoài\r\n\r\n    let selectPositionElement = null\r\n    if (positions === null) {\r\n        selectPositionElement = <ListGroup.Item>Chưa chọn phòng ban</ListGroup.Item>\r\n    }\r\n    else if (positions?.length === 0) {\r\n        selectPositionElement = <ListGroup.Item>Phòng ban chưa có chức vụ</ListGroup.Item>\r\n    }\r\n    else {\r\n        selectPositionElement = positions?.map((position) => (\r\n            <ListGroup.Item\r\n                action\r\n                key={position.id}\r\n                onClick={() => onChange(index, position)}\r\n                active={current?.name === position.name}\r\n            >\r\n                {position.name}\r\n            </ListGroup.Item>\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            onClick={() => setVisible(!visible)}\r\n            className=\"form-select\"\r\n        >\r\n            {current?.name || \"Chọn chức vụ\"}\r\n            <div className=\"select\">\r\n                {(visible) ? selectPositionElement : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSelectPosition","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Form, ListGroup } from 'react-bootstrap'\r\n\r\nimport useOnClickOutside from '~/customHooks/useOnClickOutside'\r\n\r\nconst FormSelectTeam = ({ index, currentTeam, onTeamChange, teams }) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const ref = useRef()\r\n\r\n    useOnClickOutside(ref, () => setVisible(false))\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            onClick={() => setVisible(!visible)}\r\n            className=\"form-select\"\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                name=\"phoneNumber\"\r\n                placeholder=\"Chọn CLB/Đội nhóm\"\r\n                value={currentTeam?.name || \"\"}\r\n                readOnly\r\n                required\r\n                style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"none\",\r\n                    border: \"none\",\r\n                    outline: \"none\",\r\n                    cursor: \"pointer\",\r\n                    color: \"#2f6bb1\",\r\n                    padding: \"0\"\r\n                }}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n                Vui lòng chọn phòng ban\r\n            </Form.Control.Feedback>\r\n\r\n            <div className=\"select\">\r\n                {(visible) ? teams.map((team) => (\r\n                    <ListGroup.Item\r\n                        action\r\n                        key={team.id}\r\n                        onClick={() => onTeamChange(index, team)}\r\n                        active={currentTeam?.id === team.id}\r\n                    >\r\n                        {team.name}\r\n                    </ListGroup.Item>\r\n                )) : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSelectTeam","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Button, Form, Modal, Tab, Tabs } from \"react-bootstrap\"\r\nimport { BiPlusMedical, BiTrash } from 'react-icons/bi'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { addEmployee, updateEmployee } from \"~/redux/employeesSlice\"\r\nimport { departmentsSelector, teamsSelector } from \"~/redux/selectors\"\r\nimport FormSelectDepartment from \"./FormSelectDepartment\"\r\nimport FormSelectPosition from \"./FormSelectPosition\"\r\nimport FormSelectTeam from \"./FormSelectTeam\"\r\nimport { getDepartmentList } from \"~/redux/departmentsSlice\"\r\nimport { getTeamList } from \"~/redux/teamsSlice\"\r\n\r\nconst propTypes = {\r\n    visible: PropTypes.bool.isRequired,\r\n    setVisible: PropTypes.func.isRequired,\r\n    employee: PropTypes.object\r\n}\r\n\r\nconst FormSubmitEmployee = ({ visible, setVisible, employee = null }) => {\r\n    const departments = useSelector(departmentsSelector).departments\r\n    const teams = useSelector(teamsSelector).teams\r\n    const dispatch = useDispatch()\r\n\r\n    /* Quản lý các state */\r\n    const [employeeInfo, setEmployeeInfo] = useState({\r\n        code: \"\",\r\n        name: \"\",\r\n        avatar: \"\",\r\n        dateOfBirth: \"\",\r\n        gender: \"\",\r\n        email: \"\",\r\n        phoneNumber: \"\",\r\n        teams: [],\r\n        departments: [],\r\n        user: {\r\n            username: \"\",\r\n            enableLogin: false\r\n        }\r\n    })\r\n    const [tab, setTab] = useState('departments')       // State chuyển từ điều chỉnh phòng ban <=> điều chỉnh đội nhóm\r\n    //\r\n\r\n    useEffect(() => {\r\n        dispatch(getDepartmentList())\r\n        dispatch(getTeamList())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (employee?.id) {\r\n            let data = {\r\n                ...employee,\r\n                user: (employee.user.enableLogin !== false) ? employee.user : { username: \"\" },\r\n                departments: employee.departments.map((department, index) => {\r\n                    return {\r\n                        ...employee.departments[index],\r\n                        positions: departments.find(dp => dp.id === department.id)?.positions\r\n                    }\r\n                }),\r\n                teams: employee.teams.map((team, index) => {\r\n                    return {\r\n                        ...employee.teams[index],\r\n                        positions: teams.find(tm => tm.id === team.id)?.positions\r\n                    }\r\n                })\r\n            }\r\n            setEmployeeInfo(data)\r\n        }\r\n    }, [])\r\n\r\n    /* Các hàm thay đổi giá trị của state employeeInfo mỗi khi người dùng nhập/chọn dữ liệu mới */\r\n    const handleInputChange = (e) => {\r\n        if (e.target.type === \"checkbox\") {\r\n            if (e.target.checked) {\r\n                setEmployeeInfo({\r\n                    ...employeeInfo,\r\n                    user: {\r\n                        username: null,\r\n                        enableLogin: false\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                setEmployeeInfo({\r\n                    ...employeeInfo,\r\n                    user: {\r\n                        username: employeeInfo.email,\r\n                        enableLogin: true\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            setEmployeeInfo({\r\n                ...employeeInfo,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    }\r\n    const handleUserChange = (e) => {\r\n        setEmployeeInfo({\r\n            ...employeeInfo,\r\n            user: {\r\n                ...employeeInfo.user,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    }\r\n    const handleToggleLogin = (e) => {\r\n        if (e.target.checked) {\r\n            setEmployeeInfo({\r\n                ...employeeInfo,\r\n                user: {\r\n                    username: employeeInfo.user.username || employeeInfo.email,\r\n                    enableLogin: true\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            setEmployeeInfo({\r\n                ...employeeInfo,\r\n                user: {\r\n                    username: \"\",\r\n                    enableLogin: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n    //\r\n\r\n    /* Xử lý khi click vào button Thêm phòng ban */\r\n    const handleShowFormSelectDepartment = () => {\r\n        if (employeeInfo.departments?.length === 0) {\r\n            setEmployeeInfo({\r\n                ...employeeInfo,\r\n                departments: [{}]\r\n            })\r\n        }\r\n        else {\r\n            setEmployeeInfo({\r\n                ...employeeInfo,\r\n                departments: [\r\n                    ...employeeInfo.departments,\r\n                    {}\r\n                ]\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleDepartmentChange = (index, newDepartment) => {\r\n        let newDepartments = employeeInfo.departments.map((department, key) => {\r\n            if (key === index) {\r\n                return {\r\n                    ...newDepartment,\r\n                    position: {}\r\n                }\r\n            }\r\n            return department\r\n        })\r\n        setEmployeeInfo({\r\n            ...employeeInfo,\r\n            departments: newDepartments\r\n        })\r\n    }\r\n\r\n    const handlePositionOfDepartmentChange = (index, position) => {\r\n        let newDepartments = employeeInfo.departments.map((department, key) => {\r\n            if (key === index) {\r\n                return {\r\n                    ...department,\r\n                    position\r\n                }\r\n            }\r\n            return department\r\n        })\r\n        setEmployeeInfo({\r\n            ...employeeInfo,\r\n            departments: newDepartments\r\n        })\r\n    }\r\n\r\n    const handleDeleteFormSelectDepartment = (index) => {\r\n        const newDepartments = employeeInfo.departments.filter((e, idx) => index !== idx)\r\n        setEmployeeInfo({\r\n            ...employeeInfo,\r\n            departments: newDepartments\r\n        })\r\n    }\r\n    //\r\n\r\n    /* Xử lý khi click vào button Thêm Đội nhóm */\r\n    const handleShowFormSelectTeam = () => {\r\n        if (employeeInfo.teams?.length === 0) {\r\n            setEmployeeInfo({\r\n                ...employeeInfo,\r\n                teams: [{}]\r\n            })\r\n        }\r\n        else {\r\n            setEmployeeInfo({\r\n                ...employeeInfo,\r\n                teams: [\r\n                    ...employeeInfo.teams,\r\n                    {}\r\n                ]\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleTeamChange = (index, newTeam) => {\r\n        let newTeams = employeeInfo.teams.map((team, key) => {\r\n            if (key === index) {\r\n                return {\r\n                    ...newTeam,\r\n                    position: {}\r\n                }\r\n            }\r\n            return team\r\n        })\r\n        setEmployeeInfo({\r\n            ...employeeInfo,\r\n            teams: newTeams\r\n        })\r\n    }\r\n\r\n    const handlePositionOfTeamChange = (index, position) => {\r\n        let newTeams = employeeInfo.teams.map((team, key) => {\r\n            if (key === index) {\r\n                return {\r\n                    ...team,\r\n                    position\r\n                }\r\n            }\r\n            return team\r\n        })\r\n        setEmployeeInfo({\r\n            ...employeeInfo,\r\n            teams: newTeams\r\n        })\r\n    }\r\n\r\n    const handleDeleteFormSelectTeam = (index) => {\r\n        const newTeams = employeeInfo.teams.filter((e, idx) => index !== idx)\r\n        setEmployeeInfo({\r\n            ...employeeInfo,\r\n            teams: newTeams\r\n        })\r\n    }\r\n    //\r\n\r\n    /* Xử lý Submit Form */\r\n    const [validated, setValidated] = useState(false)\r\n    const handleSubmit = (e) => {\r\n        const form = e.currentTarget\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n        }\r\n        setValidated(true)\r\n        if (form.checkValidity() === true) {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            if (employeeInfo.id) {\r\n                let data = {\r\n                    ...employeeInfo,\r\n                    modifyBy: 1\r\n                }\r\n                data.departments?.forEach((department, index, array) => {\r\n                    delete array[index].positions\r\n                })\r\n                if (data.hasOwnProperty(\"team\") === false) {\r\n                    data.teams = []\r\n                }\r\n                data.teams?.forEach((team, index, array) => {\r\n                    delete array[index].positions\r\n                })\r\n                setVisible(false)\r\n                dispatch(updateEmployee(data))\r\n            }\r\n            else {\r\n                let data = {\r\n                    ...employeeInfo,\r\n                    createBy: 1\r\n                }\r\n                data.departments?.forEach((department, index, array) => {\r\n                    delete array[index].positions\r\n                })\r\n                data.teams?.forEach((team, index, array) => {\r\n                    delete array[index].positions\r\n                })\r\n                setVisible(false)\r\n                dispatch(addEmployee(data))\r\n            }\r\n        }\r\n    }\r\n    //\r\n\r\n    return (\r\n        <Modal\r\n            className=\"modal-fullheight\"\r\n            size=\"lg\"\r\n            scrollable\r\n            show={visible}\r\n            onHide={() => setVisible(false)}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title className=\"text-white\">\r\n                    {employee?.id ? \"Chỉnh sửa nhân viên\" : \"Thêm nhân viên\"}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form\r\n                    noValidate\r\n                    validated={validated}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <div className=\"modal-body-content\">\r\n                        <div className=\"mb-3\">\r\n                            <Form.Label>Mã nhân viên:</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"code\"\r\n                                placeholder=\"Nhập mã nhân viên...\"\r\n                                value={employeeInfo.code}\r\n                                onChange={handleInputChange}\r\n                                isInvalid={employeeInfo.code?.length > 10}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Mã nhân viên không hợp lệ.\r\n                            </Form.Control.Feedback>\r\n                            Mã nhân viên không được vượt quá 10 ký tự.\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"mb-3\">\r\n                            <Form.Label>Họ và tên:</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"Nhập họ và tên nhân viên...\"\r\n                                value={employeeInfo.name}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Vui lòng nhập họ và tên nhân viên.\r\n                            </Form.Control.Feedback>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"mb-3\">\r\n                            <Form.Label>Ngày sinh:</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                name=\"dateOfBirth\"\r\n                                placeholder=\"Nhập ngày sinh...\"\r\n                                value={employeeInfo.dateOfBirth || \"\"}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Vui lòng nhập ngày sinh.\r\n                            </Form.Control.Feedback>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"mb-3\">\r\n                            <Form.Label>Giới tính:</Form.Label>\r\n                            <Form.Select\r\n                                name=\"gender\"\r\n                                value={employeeInfo.gender}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            >\r\n                                <option value=\"0\">Nữ</option>\r\n                                <option value=\"1\">Nam</option>\r\n                            </Form.Select>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Vui lòng nhập ngày sinh.\r\n                            </Form.Control.Feedback>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"mb-3\">\r\n                            <Form.Label>Email:</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Nhập email nhân viên...\"\r\n                                value={employeeInfo.email}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Vui lòng nhập email.\r\n                            </Form.Control.Feedback>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"mb-3\">\r\n                            <Form.Label>Số điện thoại:</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                name=\"phoneNumber\"\r\n                                placeholder=\"Nhập số điện thoại của nhân viên...\"\r\n                                value={employeeInfo.phoneNumber}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Vui lòng nhập số điện thoại.\r\n                            </Form.Control.Feedback>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"card mb-3\">\r\n                            <Tabs\r\n                                activeKey={tab}\r\n                                onSelect={(k) => setTab(k)}\r\n                            >\r\n                                <Tab eventKey=\"departments\" title=\"Phòng ban\">\r\n                                    <div className=\"card-body\">\r\n                                        {\r\n                                            employeeInfo.departments.map((department, index) => (\r\n                                                <div key={index} className=\"list-group-item bg-light mb-3\">\r\n                                                    <div className=\"d-flex flex-lg-row flex-column\">\r\n                                                        <div className=\"mb-3 mb-lg-0 col\">\r\n                                                            <Form.Label>Phòng ban số {index + 1}:</Form.Label>\r\n                                                            <FormSelectDepartment\r\n                                                                index={index}\r\n                                                                currentDepartment={department}\r\n                                                                onDepartmentChange={handleDepartmentChange}\r\n                                                                departments={departments}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"mb-3 ms-lg-3 col\">\r\n                                                            <Form.Label>Chức vụ của phòng ban số {index + 1}:</Form.Label>\r\n                                                            <FormSelectPosition\r\n                                                                index={index}\r\n                                                                current={employeeInfo.departments[index]?.position}\r\n                                                                positions={employeeInfo.departments[index]?.positions}\r\n                                                                onChange={handlePositionOfDepartmentChange}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <Button\r\n                                                        variant=\"outline-danger\"\r\n                                                        className=\"d-block m-auto\"\r\n                                                        onClick={() => handleDeleteFormSelectDepartment(index)}\r\n                                                    >\r\n                                                        <BiTrash /> Xóa\r\n                                                    </Button>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <Button\r\n                                            variant=\"outline-primary\"\r\n                                            className=\"d-block m-auto\"\r\n                                            onClick={handleShowFormSelectDepartment}\r\n                                        >\r\n                                            <BiPlusMedical />{\" \"} Thêm phòng ban {\" \"}<BiPlusMedical />\r\n                                        </Button>\r\n                                    </div>\r\n                                </Tab>\r\n                                <Tab eventKey=\"teams\" title=\"Đội nhóm\">\r\n                                    <div className=\"card-body\">\r\n                                        {\r\n                                            employeeInfo.teams?.map((team, index) => (\r\n                                                <div key={index} className=\"list-group-item bg-light mb-3\">\r\n                                                    <div className=\"d-flex flex-lg-row flex-column\">\r\n                                                        <div className=\"mb-3 mb-lg-0 col\">\r\n                                                            <Form.Label>Đội nhóm số {index + 1}:</Form.Label>\r\n                                                            <FormSelectTeam\r\n                                                                index={index}\r\n                                                                currentTeam={team}\r\n                                                                onTeamChange={handleTeamChange}\r\n                                                                teams={teams}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"mb-3 ms-lg-3 col\">\r\n                                                            <Form.Label>Chức vụ của đội nhóm số {index + 1}:</Form.Label>\r\n                                                            <FormSelectPosition\r\n                                                                index={index}\r\n                                                                current={employeeInfo.teams[index]?.position}\r\n                                                                positions={employeeInfo.teams[index]?.positions}\r\n                                                                onChange={handlePositionOfTeamChange}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <Button\r\n                                                        variant=\"outline-danger\"\r\n                                                        className=\"d-block m-auto\"\r\n                                                        onClick={() => handleDeleteFormSelectTeam(index)}\r\n                                                    >\r\n                                                        <BiTrash /> Xóa\r\n                                                    </Button>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <Button\r\n                                            variant=\"outline-primary\"\r\n                                            className=\"d-block m-auto\"\r\n                                            onClick={handleShowFormSelectTeam}\r\n                                        >\r\n                                            <BiPlusMedical />{\" \"} Thêm đội nhóm {\" \"}<BiPlusMedical />\r\n                                        </Button>\r\n                                    </div>\r\n                                </Tab>\r\n                            </Tabs>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                <Form.Check\r\n                                    type=\"switch\"\r\n                                    label=\"Cho phép đăng nhập\"\r\n                                    checked={employeeInfo.user.enableLogin}\r\n                                    onChange={handleToggleLogin}\r\n                                />\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                {(employeeInfo.user.enableLogin) ? (\r\n                                    <>\r\n                                        <div className=\"mb-3\">\r\n                                            <Form.Label htmlFor=\"username\" className=\"mt-3\">Tên đăng nhập:</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                name=\"username\"\r\n                                                placeholder=\"Nhập tên đăng nhập...\"\r\n                                                value={employeeInfo.user?.username || employeeInfo.email}\r\n                                                onChange={handleUserChange}\r\n                                                required\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                Vui lòng nhập tên đăng nhập.\r\n                                            </Form.Control.Feedback>\r\n                                        </div>\r\n                                        {((employee?.id && employee?.user.username === \"\" && employee?.user.password === \"cmdcmdcmd\") || !employee) ? (\r\n                                            <>\r\n                                                <hr />\r\n                                                <div className=\"mb-3\">\r\n                                                    <Form.Label htmlFor=\"password\">Mật khẩu:</Form.Label>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        name=\"password\"\r\n                                                        placeholder=\"Nhập mật khẩu...\"\r\n                                                        value={\"cmacmacma\"}\r\n                                                        readOnly\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        Vui lòng nhập mật khẩu.\r\n                                                    </Form.Control.Feedback>\r\n                                                </div>\r\n                                            </>\r\n                                        ) : null}\r\n                                    </>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Button\r\n                        size=\"lg\"\r\n                        type=\"submit\"\r\n                        className=\"d-table m-auto\"\r\n                    >\r\n                        {(employee?.id) ? \"Cập nhật thông tin\" : \"Xác nhận tạo mới\"}\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nFormSubmitEmployee.propTypes = propTypes\r\n\r\nexport default FormSubmitEmployee","import React, { useState } from 'react'\r\nimport { Dropdown, Image } from 'react-bootstrap'\r\nimport { BiEdit, BiTrash } from 'react-icons/bi'\r\nimport { BsFillLockFill, BsFillUnlockFill } from 'react-icons/bs'\r\n\r\nimport moreIcon from \"~/assets/icons/more.svg\"\r\nimport DeleteEmployee from './EmployeesFeatures/DeleteEmployee'\r\nimport LockEmployee from './EmployeesFeatures/LockEmployee'\r\nimport ResetPassword from './EmployeesFeatures/ResetPassword'\r\nimport FormSubmitEmployee from './EmployeesFeatures/SubmitEmployee/FormSubmitEmployee'\r\n\r\nconst EmployeeRow = ({ employeeInfo }) => {\r\n    const [visibleEditEmployeeUI, setVisibleEditEmployeeUI] = useState(false)\r\n    const [visibleLockEmployeeUI, setVisibleLockEmployeeUI] = useState(false)\r\n    const [visibleDeleteEmployeeUI, setVisibleDeleteEmployeeUI] = useState(false)\r\n\r\n    const showDate = () => {\r\n        const dateOfBirth = new Date(employeeInfo.dateOfBirth)      // Khởi tạo biến dateOfBirth kiểu dữ liệu Date với dữ liệu truyền vào là ngày sinh của sinh viên được lấy từ database có dạng yyyymmdd\r\n        return \"\" + (dateOfBirth.getDate() < 10 ? \"0\" : \"\") + dateOfBirth.getDate() + \"/\" + (dateOfBirth.getMonth() + 1 < 10 ? \"0\" : \"\") + (dateOfBirth.getMonth() + 1) + \"/\" + dateOfBirth.getFullYear()\r\n    }\r\n\r\n    let activeStatusElement = <span className=\"d-inline-block rounded-circle bg-success\" style={{ height: \"10px\", width: \"10px\" }} />\r\n    if (employeeInfo.active === false) {\r\n        activeStatusElement = <span className=\"d-inline-block rounded-circle bg-secondary\" style={{ height: \"10px\", width: \"10px\" }} />\r\n    }\r\n\r\n    const mainDepartment = employeeInfo.departments.length > 0 && employeeInfo.departments?.reduce((min, department) => min.level < department.level ? min : department)\r\n\r\n    return (\r\n        <div\r\n            className=\"item employee list-group-item\"\r\n            style={{\r\n                border: \"none\"\r\n            }}\r\n        >\r\n            <div className=\"item-label\" />\r\n            <div className=\"ms-lg-5\" />\r\n            <div className=\"employee-active\">\r\n                {activeStatusElement}\r\n            </div>\r\n            <div className=\"employee-name\">\r\n                <div className=\"d-lg-none fw-bold col text-break\">\r\n                    Họ và tên:\r\n                </div>\r\n                <div className=\"col text-break\">\r\n                    <Image src={employeeInfo.avatar} width={40} className=\"rounded-circle me-2\" />\r\n                    {employeeInfo.name}\r\n                </div>\r\n            </div>\r\n            <div className=\"employee-dob\">\r\n                <div className=\"d-lg-none fw-bold col text-break\">\r\n                    Ngày sinh:\r\n                </div>\r\n                <div className=\"col text-break\">\r\n                    {showDate()}\r\n                </div>\r\n            </div>\r\n            <div className=\"employee-email\">\r\n                <div className=\"d-lg-none fw-bold col text-break\">\r\n                    Email:\r\n                </div>\r\n                <div className=\"col text-break\">\r\n                    {employeeInfo.email}\r\n                </div>\r\n            </div>\r\n            <div className=\"employee-phoneNumber\">\r\n                <div className=\"d-lg-none fw-bold col text-break\">\r\n                    Số điện thoại:\r\n                </div>\r\n                <div className=\"col text-break\">\r\n                    {employeeInfo.phoneNumber}\r\n                </div>\r\n            </div>\r\n            <div className=\"employee-department\">\r\n                <div className=\"d-lg-none fw-bold col text-break\">\r\n                    Phòng:\r\n                </div>\r\n                <div className=\"col text-break\">\r\n                    {mainDepartment.name || \"Trống\"}\r\n                </div>\r\n            </div>\r\n            <div className=\"employee-position\">\r\n                <div className=\"d-lg-none fw-bold col text-break\">\r\n                    Chức vụ:\r\n                </div>\r\n                <div className=\"col text-break\">\r\n                    {mainDepartment.position?.name || \"Trống\"}\r\n                </div>\r\n            </div>\r\n            <Dropdown className=\"employee-more more\">\r\n                <Dropdown.Toggle variant=\"none\">\r\n                    <Image src={moreIcon} />\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu className=\"animate__animated animate__zoomIn animate__faster\">\r\n                    <Dropdown.Item onClick={() => setVisibleEditEmployeeUI(true)}>\r\n                        <BiEdit /> Chỉnh sửa\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => setVisibleLockEmployeeUI(true)}>\r\n                        {\r\n                            employeeInfo.active ? <><BsFillLockFill /> Khóa tài khoản</> : <><BsFillUnlockFill /> Mở khóa tài khoản</>\r\n                        }\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => setVisibleDeleteEmployeeUI(true)}>\r\n                        <BiTrash /> Xóa\r\n                    </Dropdown.Item>\r\n                    <ResetPassword employee={employeeInfo} />\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            {\r\n                visibleEditEmployeeUI && <FormSubmitEmployee visible={visibleEditEmployeeUI} setVisible={setVisibleEditEmployeeUI} employee={employeeInfo} />\r\n            }\r\n            {\r\n                visibleLockEmployeeUI && <LockEmployee visible={visibleLockEmployeeUI} setVisible={setVisibleLockEmployeeUI} employeeInfo={employeeInfo} />\r\n            }\r\n            {\r\n                visibleDeleteEmployeeUI && <DeleteEmployee visible={visibleDeleteEmployeeUI} setVisible={setVisibleDeleteEmployeeUI} employeeInfo={employeeInfo} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeeRow","import React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport FormSubmitEmployee from './SubmitEmployee/FormSubmitEmployee'\r\n\r\nconst AddEmployee = () => {\r\n    const [visibleFormAddEmployee, setVisibleFormAddEmployee] = useState(false)       // State hiển thị Form thêm nhân viên\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"primary\"\r\n                onClick={() => setVisibleFormAddEmployee(!visibleFormAddEmployee)}\r\n            >\r\n                <span className=\"fw-bold\">\r\n                    Thêm nhân viên\r\n                </span>\r\n            </Button>\r\n            {\r\n                visibleFormAddEmployee && <FormSubmitEmployee visible={visibleFormAddEmployee} setVisible={setVisibleFormAddEmployee} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddEmployee","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Dropdown, ListGroup, Modal, Table } from 'react-bootstrap'\r\nimport { BiInfoSquare } from 'react-icons/bi'\r\n\r\nimport { departmentsSelector } from '~/redux/selectors'\r\nimport departmentsApi from '~/api/departmentsApi'\r\n\r\nconst DepartmentDetail = ({ visible, setVisible, departmentId }) => {\r\n    const departments = useSelector(departmentsSelector).departments    // Lấy danh sách phòng ban từ redux\r\n\r\n    const [departmentInfo, setDepartmentInfo] = useState({})\r\n\r\n    let parentName = \"\"     // Khởi tạo tên phòng ban cha mặc định là rỗng\r\n\r\n    useEffect(() => {\r\n        departmentsApi.getDepartmentDetailById(departmentId)\r\n            .then((response) => {\r\n                setDepartmentInfo(response.data.data)\r\n            })\r\n    }, [])\r\n\r\n    // Duyệt qua danh sách phòng ban để tìm ra tên phòng ban cha\r\n    departments.forEach(dp => {\r\n        if (dp.id === departmentInfo.fatherDepartmentId) {\r\n            parentName = dp.name\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Modal\r\n            className=\"modal-fullheight\"\r\n            size=\"md\"\r\n            scrollable\r\n            show={visible}\r\n            onHide={() => setVisible(false)}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    Chi tiết phòng ban\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        Mã phòng ban: {departmentInfo.code}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Tên phòng ban: {departmentInfo.name}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Thuộc sự quản lý của phòng ban: {parentName || departmentInfo.name}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Mô tả về phòng ban: {departmentInfo.description === \"\" ? \"Chưa có mô tả\" : departmentInfo.description}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Table\r\n                            striped\r\n                            hover\r\n                            responsive\r\n                            borderless\r\n                        >\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>\r\n                                        <span className=\"fw-bolder\">\r\n                                            CHỨC VỤ\r\n                                        </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span className=\"fw-bolder\">\r\n                                            VAI TRÒ\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    departmentInfo.positions?.map((position, index) => (\r\n                                        <tr key={index}>\r\n                                            <td>{position.name}</td>\r\n                                            <td>{position.role?.name}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DepartmentDetail","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nimport { deleteDepartment } from '~/redux/departmentsSlice'\r\n\r\n\r\nconst DeleteDepartment = ({ visible, setVisible, departmentInfo }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = (departmentId) => {\r\n        dispatch(deleteDepartment(departmentId))\r\n        setVisible(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            scrollable\r\n            show={visible}\r\n            onHide={() => setVisible(false)}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    XÓA PHÒNG BAN\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Bạn có chắc muốn xóa Phòng ban <span className=\"fw-bolder\">{departmentInfo.name}</span> khỏi KTX?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button\r\n                    variant=\"secondary\"\r\n                    className=\"text-white\"\r\n                    onClick={() => setVisible(false)}\r\n                >\r\n                    Hủy\r\n                </Button>\r\n                <Button\r\n                    variant=\"danger\"\r\n                    className=\"text-white\"\r\n                    onClick={() => handleDelete(departmentInfo.id)}\r\n                >\r\n                    Đồng ý\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DeleteDepartment","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Form, ListGroup } from 'react-bootstrap'\r\nimport { BiTrash } from 'react-icons/bi'\r\n\r\nimport { getRoleList } from '~/redux/rolesSlice'\r\nimport { rolesSelector } from '~/redux/selectors'\r\nimport Select from '~/components/Select'\r\n\r\nconst Positions = ({ departmentInfo, setDepartmentInfo }) => {\r\n    const roles = useSelector(rolesSelector).roles\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getRoleList())\r\n    }, [])\r\n\r\n    /* Các hàm thay đổi giá trị của state departmentInfo mỗi khi người dùng nhập/chọn dữ liệu mới */\r\n    const handleInputChange = (e) => {\r\n        const index = e.target.tabIndex\r\n        const name = e.target.name\r\n        const value = (e.target.type === \"checkbox\") ? e.target.checked : e.target.value\r\n        const start = departmentInfo.positions.slice(0, index) || []\r\n        const end = departmentInfo.positions.slice(index + 1, departmentInfo.positions.length + 1) || []\r\n        setDepartmentInfo({\r\n            ...departmentInfo,\r\n            positions: [\r\n                ...start,\r\n                {\r\n                    ...departmentInfo.positions[index],\r\n                    [name]: value\r\n                },\r\n                ...end]\r\n        })\r\n    }\r\n    const handleRoleChange = (index, newRole) => {\r\n        let newPositions = departmentInfo.positions.map((position, key) => {\r\n            if (key === index) {\r\n                return {\r\n                    ...position,\r\n                    role: newRole\r\n                }\r\n            }\r\n            return position\r\n        })\r\n        setDepartmentInfo({\r\n            ...departmentInfo,\r\n            positions: newPositions\r\n        })\r\n    }\r\n    const handleDelete = (index) => {\r\n        const newPositions = departmentInfo.positions.filter((e, idx) => index !== idx)\r\n        setDepartmentInfo({\r\n            ...departmentInfo,\r\n            positions: newPositions\r\n        })\r\n    }\r\n    //\r\n\r\n    // Thêm một form nhập chức vụ mới mỗi khi click vào Button Thêm chức vụ\r\n    const handleShowFormAddPostion = () => {\r\n        if (departmentInfo.positions?.length === 0) {\r\n            setDepartmentInfo({\r\n                ...departmentInfo,\r\n                positions: [{\r\n                    name: \"\",\r\n                    isManager: false,\r\n                    role: {\r\n                        id: \"\",\r\n                        name: \"\"\r\n                    }\r\n                }]\r\n            })\r\n        }\r\n        else {\r\n            setDepartmentInfo({\r\n                ...departmentInfo,\r\n                positions: [\r\n                    ...departmentInfo.positions,\r\n                    {\r\n                        name: \"\",\r\n                        isManager: false,\r\n                        role: {\r\n                            id: \"\",\r\n                            name: \"\"\r\n                        }\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                departmentInfo.positions?.map((position, index) => (\r\n                    <div key={index}>\r\n                        <ListGroup.Item className=\"bg-light text-body\">\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Tên chức vụ:</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    tabIndex={index}\r\n                                    placeholder=\"Nhập tên chức vụ...\"\r\n                                    value={position.name}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Vui lòng nhập tên chức vụ.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Vai trò:</Form.Label>\r\n                                <Select\r\n                                    index={index}\r\n                                    placeholder=\"Chọn vai trò\"\r\n                                    displayValue=\"name\"\r\n                                    value={position.role}\r\n                                    options={roles}\r\n                                    onSelect={handleRoleChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"row justify-content-center\">\r\n                                <Form.Check\r\n                                    label=\"Là trưởng phòng\"\r\n                                    name=\"isManager\"\r\n                                    className=\"col ms-3\"\r\n                                    tabIndex={index}\r\n                                    disabled={departmentInfo.positions.some(e => e.isManager === true) && position.isManager === false}\r\n                                    checked={position.isManager}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                                <Button variant=\"none\" className=\"col-auto me-3\" onClick={() => handleDelete(index)}>\r\n                                    <BiTrash />\r\n                                </Button>\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                    </div>\r\n                ))\r\n            }\r\n            <div className=\"mb-3 mt-3\">\r\n                <Button variant=\"outline-primary\" className=\"d-table m-auto\" onClick={handleShowFormAddPostion}>\r\n                    Thêm chức vụ\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Positions","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Button, Form, Modal } from \"react-bootstrap\"\r\n\r\nimport { addDepartment, updateDepartment } from \"~/redux/departmentsSlice\"\r\nimport { departmentsSelector } from \"~/redux/selectors\"\r\nimport FormSelectDepartment from \"../../EmployeesFeatures/SubmitEmployee/FormSelectDepartment\"\r\nimport Positions from \"./Positions\"\r\n\r\nconst FormSubmitDepartment = ({ visible, setVisible, department = null }) => {\r\n    const departments = useSelector(departmentsSelector).departments\r\n    const dispatch = useDispatch()\r\n\r\n    /* Quản lý các state */\r\n    const [departmentInfo, setDepartmentInfo] = useState({\r\n        // State lưu thông tin của phòng ban khi người dùng nhập dữ liệu\r\n        code: \"\",\r\n        name: \"\",\r\n        description: \"\",\r\n        fatherDepartmentId: null,\r\n        positions: []\r\n    })\r\n    //\r\n\r\n    useEffect(() => {\r\n        if (department?.id) {\r\n            setDepartmentInfo(department)\r\n        }\r\n    }, [department])\r\n\r\n    /* Các hàm thay đổi giá trị của state departmentInfo mỗi khi người dùng nhập/chọn dữ liệu mới */\r\n    const handleInputChange = (e) => {\r\n        setDepartmentInfo({\r\n            ...departmentInfo,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const handleDepartmentChange = (index, department) => {\r\n        setDepartmentInfo({\r\n            ...departmentInfo,\r\n            level: department.level + 1,\r\n            fatherDepartmentId: department.id\r\n        })\r\n    }\r\n    //\r\n\r\n    /* Xử lý Submit Form */\r\n    const [validated, setValidated] = useState(false)\r\n    const handleSubmit = (e) => {\r\n        const form = e.currentTarget\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n        }\r\n        setValidated(true)\r\n        if (form.checkValidity() === true) {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            if (departmentInfo.id) {\r\n                dispatch(updateDepartment({\r\n                    ...departmentInfo,\r\n                    fatherDepartmentId: departmentInfo.fatherDepartmentId === -1 ? null : departmentInfo.fatherDepartmentId\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(addDepartment({\r\n                    ...departmentInfo,\r\n                    fatherDepartmentId: departmentInfo.fatherDepartmentId === -1 ? null : departmentInfo.fatherDepartmentId\r\n                }))\r\n            }\r\n            setVisible(false)\r\n        }\r\n    }\r\n    //\r\n\r\n    // Tìm phòng ban cha dựa theo id\r\n    const fatherDepartment = departments.find(department => department.id === departmentInfo.fatherDepartmentId) || {\r\n        id: null,\r\n        name: \"Không có phòng ban cha\"\r\n    }\r\n    return (\r\n        <Modal\r\n            className=\"modal-fullheight\"\r\n            size=\"md\"\r\n            scrollable\r\n            show={visible}\r\n            onHide={() => setVisible(false)}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    {department?.id ? \"CHỈNH SỬA PHÒNG BAN\" : \"THÊM PHÒNG BAN MỚI\"}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form\r\n                    noValidate\r\n                    validated={validated}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <div className=\"mb-3\">\r\n                        <Form.Label>Mã phòng ban:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"code\"\r\n                            placeholder=\"Nhập mã phòng ban...\"\r\n                            value={departmentInfo.code}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Vui lòng nhập mã phòng ban.\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"mb-3\">\r\n                        <Form.Label>Tên phòng ban:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Nhập tên phòng ban...\"\r\n                            value={departmentInfo.name}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Vui lòng nhập tên phòng ban.\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"mb-3\">\r\n                        <Form.Label>Mô tả:</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows={10}\r\n                            name=\"description\"\r\n                            placeholder=\"Nhập mô tả phòng ban...\"\r\n                            value={departmentInfo.description}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"mb-3\">\r\n                        <Form.Label>Phòng ban cha:</Form.Label>\r\n                        <FormSelectDepartment\r\n                            index={null}\r\n                            currentDepartment={fatherDepartment}\r\n                            onDepartmentChange={handleDepartmentChange}\r\n                            departments={departments}\r\n                        />\r\n                    </div>\r\n                    <Positions departmentInfo={departmentInfo} setDepartmentInfo={setDepartmentInfo} />\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            className=\"d-table m-auto\"\r\n                            size=\"lg\"\r\n                            type=\"submit\"\r\n                        >\r\n                            {(department?.id) ? \"Cập nhật thông tin\" : \"Xác nhận tạo mới\"}\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default FormSubmitDepartment\r\n","import React, { useState } from 'react'\r\nimport { Dropdown, Image, ListGroup } from 'react-bootstrap'\r\nimport { BiEdit, BiInfoSquare, BiTrash } from 'react-icons/bi'\r\n\r\nimport departmentLevelIcon from '~/assets/icons/department_level.svg'\r\nimport moreIcon from '~/assets/icons/more.svg'\r\nimport DepartmentDetail from './DepartmentDetail'\r\nimport DeleteDepartment from './DepartmentsFeatures/DeleteDepartment'\r\nimport FormSubmitDepartment from './DepartmentsFeatures/FormSubmitDepartment'\r\n\r\nconst DepartmentRow = ({ departmentInfo }) => {\r\n    const [visibleDepartmentDetailUI, setVisibleDepartmentDetailUI] = useState(false)\r\n    const [visibleEditDepartmentUI, setVisibleEditDepartmentUI] = useState(false)\r\n    const [visibleDeleteDepartmentUI, setVisibleDeleteDepartmentUI] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <ListGroup.Item\r\n                action\r\n                className=\"position-relative\"\r\n                style={{ paddingLeft: departmentInfo.level * 40 }}\r\n            >\r\n                <Image src={departmentLevelIcon} />\r\n                <span className=\"ps-2\" /> {departmentInfo.name}\r\n                <div\r\n                    className=\"position-absolute\"\r\n                    style={{\r\n                        right: \"1rem\",\r\n                        bottom: \"50%\",\r\n                        transform: \"translateY(50%)\"\r\n                    }}\r\n                >\r\n                    <Dropdown className=\"col-auto\">\r\n                        <Dropdown.Toggle variant=\"none\" className=\"text-white\">\r\n                            <Image src={moreIcon} />\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"animate__animated animate__zoomIn animate__faster\">\r\n                            <Dropdown.Item onClick={() => setVisibleDepartmentDetailUI(true)}>\r\n                                <BiInfoSquare /> Chi tiết\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setVisibleEditDepartmentUI(true)}>\r\n                                <BiEdit /> Chỉnh sửa\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setVisibleDeleteDepartmentUI(true)}>\r\n                                <BiTrash /> Xóa\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            </ListGroup.Item>\r\n            {\r\n                visibleDepartmentDetailUI && <DepartmentDetail visible={visibleDepartmentDetailUI} setVisible={setVisibleDepartmentDetailUI} departmentId={departmentInfo.id} />\r\n            }\r\n            {\r\n                visibleEditDepartmentUI && <FormSubmitDepartment visible={visibleEditDepartmentUI} setVisible={setVisibleEditDepartmentUI} department={departmentInfo} />\r\n            }\r\n            {\r\n                visibleDeleteDepartmentUI && <DeleteDepartment visible={visibleDeleteDepartmentUI} setVisible={setVisibleDeleteDepartmentUI} departmentInfo={departmentInfo} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DepartmentRow","import React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport FormSubmitDepartment from './FormSubmitDepartment'\r\n\r\nconst AddDepartment = () => {\r\n    const [visible, setVisible] = useState(false)\r\n    return (\r\n        <>\r\n            <Button\r\n                className=\"d-block m-auto\"\r\n                onClick={() => setVisible(!visible)}\r\n            >\r\n                Tạo mới\r\n            </Button>\r\n            {\r\n                visible && <FormSubmitDepartment visible={visible} setVisible={setVisible} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(AddDepartment)","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ListGroup, Modal } from 'react-bootstrap'\r\n\r\nimport { getDepartmentList } from '../../../redux/departmentsSlice'\r\nimport { departmentsSelector } from '../../../redux/selectors'\r\nimport AppSearch from '../../../components/AppSearch'\r\nimport DepartmentRow from './DepartmentRow'\r\nimport AddDepartment from './DepartmentsFeatures/AddDepartment'\r\nimport Loading from '~/components/Loading'\r\n\r\nconst DepartmentsMainPage = ({ visible, setVisible }) => {\r\n    const status = useSelector(departmentsSelector).status\r\n    const departments = useSelector(departmentsSelector).departments\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [filters, setFilters] = useState({\r\n        name: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getDepartmentList(filters))\r\n    }, [filters])\r\n\r\n    const handleSearchTerm = (searchTerm) => {\r\n        setFilters({\r\n            name: searchTerm\r\n        })\r\n    }\r\n\r\n    // Chuỗi lệnh hiển thị tên phòng phân cấp\r\n    let departmentsElement = []\r\n    const recursiveDepartmentChild = (department_parent, level) => {\r\n        departments?.forEach((department_child) => {\r\n            if (department_parent.id === department_child.fatherDepartmentId) {\r\n                departmentsElement.push(\r\n                    <DepartmentRow\r\n                        key={department_child.id}\r\n                        departmentInfo={department_child}\r\n                    />\r\n                )\r\n                recursiveDepartmentChild(department_child, level + 1)\r\n            }\r\n        })\r\n    }\r\n    const traverseDepartment = () => {\r\n        departments?.forEach((department) => {\r\n            if (department.fatherDepartmentId === -1) {\r\n                departmentsElement.push(\r\n                    <DepartmentRow\r\n                        key={department.id}\r\n                        departmentInfo={department}\r\n                    />\r\n                )\r\n                recursiveDepartmentChild(department, 2)\r\n            }\r\n        })\r\n    }\r\n    traverseDepartment()\r\n    //\r\n\r\n    return (\r\n        <Modal\r\n            className=\"modal-fullheight\"\r\n            size=\"md\"\r\n            scrollable\r\n            show={visible}\r\n            onHide={() => setVisible(false)}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    Phòng ban\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"row align-content-between justify-content-between bg-light p-3\">\r\n                    <div className=\"col\">\r\n                        <AppSearch\r\n                            value={filters.name}\r\n                            onSearch={handleSearchTerm}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <AddDepartment />\r\n                    </div>\r\n                </div>\r\n                {\r\n                    status === \"loading\" ? (\r\n                        <Loading />\r\n                    ) : (\r\n                        <ListGroup\r\n                            className=\"mt-3\"\r\n                            variant=\"flush\"\r\n                        >\r\n                            {departmentsElement}\r\n                        </ListGroup>\r\n                    )\r\n                }\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DepartmentsMainPage","import React, { useState } from 'react'\r\n\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport Departments from './DepartmentsMainPage'\r\n\r\nconst ButtonShowDepartments = () => {\r\n    const [visible, setVisible] = useState(false)\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"outline-primary\"\r\n                onClick={() => setVisible(!visible)}\r\n            >\r\n                <span className=\"fw-bold\">\r\n                Phòng ban\r\n                </span>\r\n            </Button>\r\n            {\r\n                visible && <Departments visible={visible} setVisible={setVisible} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ButtonShowDepartments","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ListGroup, Modal, Table } from 'react-bootstrap'\r\n\r\nimport teamsApi from '~/api/teamsApi'\r\n\r\nconst TeamDetail = ({ visible, setVisible, teamId }) => {\r\n    const [teamInfo, setTeamInfo] = useState({})\r\n\r\n    useEffect(() => {\r\n        teamsApi.getTeamDetailById(teamId)\r\n            .then((response) => {\r\n                setTeamInfo(response.data.data)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            className=\"modal-fullheight\"\r\n            size=\"md\"\r\n            scrollable\r\n            show={visible}\r\n            onHide={() => setVisible(false)}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    Chi tiết đội nhóm\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        Mã đội nhóm: {teamInfo.code}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Tên đội nhóm: {teamInfo.name}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Mô tả về đội nhóm: {(teamInfo.description === \"\") ? \"Chưa có mô tả\" : teamInfo.description}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Table\r\n                            striped\r\n                            hover\r\n                            responsive\r\n                            borderless\r\n                        >\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>\r\n                                        <span className=\"fw-bolder\">\r\n                                            CHỨC VỤ\r\n                                        </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span className=\"fw-bolder\">\r\n                                            VAI TRÒ\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    teamInfo.positions?.map((position) => (\r\n                                        <tr key={position.id}>\r\n                                            <td>{position.name}</td>\r\n                                            <td>{position.role?.name}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default TeamDetail","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nimport { deleteTeam } from '~/redux/teamsSlice'\r\n\r\n\r\nconst DeleteTeam = ({ visible, setVisible, teamInfo }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = (teamId) => {\r\n        dispatch(deleteTeam(teamId))\r\n        setVisible(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            scrollable\r\n            show={visible}\r\n            onHide={() => setVisible(false)}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    XÓA ĐỘI NHÓM\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Bạn có chắc muốn xóa Đội nhóm <span className=\"fw-bolder\">{teamInfo.name}</span> khỏi KTX?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button\r\n                    variant=\"secondary\"\r\n                    className=\"text-white\"\r\n                    onClick={() => setVisible(false)}\r\n                >\r\n                    Hủy\r\n                </Button>\r\n                <Button\r\n                    variant=\"danger\"\r\n                    className=\"text-white\"\r\n                    onClick={() => handleDelete(teamInfo.id)}\r\n                >\r\n                    Đồng ý\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DeleteTeam","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Form, ListGroup } from 'react-bootstrap'\r\nimport { BiTrash } from 'react-icons/bi'\r\n\r\nimport { getRoleList } from '~/redux/rolesSlice'\r\nimport { rolesSelector } from '~/redux/selectors'\r\nimport Select from '~/components/Select'\r\n\r\nconst Positions = ({ teamInfo, setTeamInfo }) => {\r\n    const roles = useSelector(rolesSelector).roles\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getRoleList())\r\n    }, [])\r\n\r\n    /* Các hàm thay đổi giá trị của state teamInfo mỗi khi người dùng nhập/chọn dữ liệu mới */\r\n    const handleInputChange = (e) => {\r\n        const index = e.target.tabIndex\r\n        const name = e.target.name\r\n        const value = (e.target.type === \"checkbox\") ? e.target.checked : e.target.value\r\n        const start = teamInfo.positions.slice(0, index) || []\r\n        const end = teamInfo.positions.slice(index + 1, teamInfo.positions.length + 1) || []\r\n        setTeamInfo({\r\n            ...teamInfo,\r\n            positions: [\r\n                ...start,\r\n                {\r\n                    ...teamInfo.positions[index],\r\n                    [name]: value\r\n                },\r\n                ...end]\r\n        })\r\n    }\r\n    const handleRoleChange = (index, newRole) => {\r\n        let newPositions = teamInfo.positions.map((position, key) => {\r\n            if (key === index) {\r\n                return {\r\n                    ...position,\r\n                    role: newRole\r\n                }\r\n            }\r\n            return position\r\n        })\r\n        setTeamInfo({\r\n            ...teamInfo,\r\n            positions: newPositions\r\n        })\r\n    }\r\n    const handleDelete = (index) => {\r\n        const array = teamInfo.positions.filter((e, idx) => index !== idx)\r\n        setTeamInfo({\r\n            ...teamInfo,\r\n            positions: array\r\n        })\r\n    }\r\n    //\r\n\r\n    // Thêm một form nhập chức vụ mới mỗi khi click vào Button Thêm chức vụ\r\n    const handleShowFormAddPostion = () => {\r\n        if (teamInfo.positions?.length === 0) {\r\n            setTeamInfo({\r\n                ...teamInfo,\r\n                positions: [{\r\n                    name: \"\",\r\n                    isManager: false,\r\n                    role: {\r\n                        id: \"\",\r\n                        name: \"\"\r\n                    }\r\n                }]\r\n            })\r\n        }\r\n        else {\r\n            setTeamInfo({\r\n                ...teamInfo,\r\n                positions: [\r\n                    ...teamInfo.positions,\r\n                    {\r\n                        name: \"\",\r\n                        isManager: false,\r\n                        role: {\r\n                            id: \"\",\r\n                            name: \"\"\r\n                        }\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {\r\n                teamInfo?.positions?.map((position, index) => (\r\n                    <div key={index}>\r\n                        <ListGroup.Item className=\"bg-light text-body\">\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Tên chức vụ:</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    tabIndex={index}\r\n                                    placeholder=\"Nhập tên chức vụ...\"\r\n                                    value={position.name}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Vui lòng nhập tên chức vụ.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Vai trò:</Form.Label>\r\n                                <Select\r\n                                    index={index}\r\n                                    placeholder=\"Chọn vai trò\"\r\n                                    displayValue=\"name\"\r\n                                    value={position.role}\r\n                                    options={roles}\r\n                                    onSelect={handleRoleChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"row justify-content-center\">\r\n                                <Form.Check\r\n                                    label=\"Là trưởng phòng\"\r\n                                    name=\"isManager\"\r\n                                    className=\"col ms-3\"\r\n                                    tabIndex={index}\r\n                                    disabled={teamInfo.positions.some(e => e.isManager === true) && position.isManager === false}\r\n                                    checked={position.isManager}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                                <Button variant=\"none\" className=\"col-auto me-3\" onClick={() => handleDelete(index)}>\r\n                                    <BiTrash />\r\n                                </Button>\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                    </div>\r\n                ))\r\n            }\r\n            <div className=\"mb-3 mt-3\">\r\n                <Button variant=\"outline-primary\" className=\"d-table m-auto\" onClick={handleShowFormAddPostion}>\r\n                    Thêm chức vụ\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Positions","import React, { useEffect, useState } from \"react\"\r\nimport { Button, Form, Modal } from \"react-bootstrap\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport { addTeam, updateTeam } from \"~/redux/teamsSlice\"\r\nimport Positions from \"./Positions\"\r\n\r\nconst FormSubmitTeam = ({ visible, setVisible, team = null }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    /* Quản lý các state */\r\n    const [teamInfo, setTeamInfo] = useState({\r\n        // State lưu thông tin của đội nhóm khi người dùng nhập dữ liệu\r\n        code: \"\",\r\n        name: \"\",\r\n        description: \"\",\r\n        positions: []\r\n    })\r\n    //\r\n\r\n    useEffect(() => {\r\n        if (team?.id) {\r\n            setTeamInfo(team)\r\n        }\r\n    }, [team])\r\n\r\n    /* Các hàm thay đổi giá trị của state teamInfo mỗi khi người dùng nhập/chọn dữ liệu mới */\r\n    const handleInputChange = (e) => {\r\n        setTeamInfo({\r\n            ...teamInfo,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    //\r\n\r\n    /* Xử lý Submit Form */\r\n    const [validated, setValidated] = useState(false)\r\n    const handleSubmit = (e) => {\r\n        const form = e.currentTarget\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n        }\r\n        setValidated(true)\r\n        if (form.checkValidity() === true) {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            if (teamInfo.id) {\r\n                dispatch(updateTeam(teamInfo))\r\n            }\r\n            else {\r\n                dispatch(addTeam(teamInfo))\r\n            }\r\n        }\r\n    }\r\n    //\r\n\r\n    return (\r\n        <Modal\r\n            className=\"modal-fullheight\"\r\n            size=\"md\"\r\n            scrollable\r\n            show={visible}\r\n            onHide={() => setVisible(false)}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    {team?.id ? \"CHỈNH SỬA ĐỘI NHÓM\" : \"THÊM ĐỘI NHÓM MỚI\"}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form\r\n                    noValidate\r\n                    validated={validated}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <div className=\"mb-3\">\r\n                        <Form.Label>Mã đội nhóm:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"code\"\r\n                            placeholder=\"Nhập mã đội nhóm...\"\r\n                            value={teamInfo.code}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Vui lòng nhập mã đội nhóm.\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"mb-3\">\r\n                        <Form.Label>Tên đội nhóm:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Nhập tên đội nhóm...\"\r\n                            value={teamInfo.name}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Vui lòng nhập tên đội nhóm.\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"mb-3\">\r\n                        <Form.Label>Mô tả:</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows={10}\r\n                            name=\"description\"\r\n                            placeholder=\"Nhập mô tả đội nhóm...\"\r\n                            value={teamInfo.description}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </div>\r\n                    <hr />\r\n                    <Positions teamInfo={teamInfo} setTeamInfo={setTeamInfo} />\r\n                    <Button\r\n                        className=\"d-table m-auto\"\r\n                        size=\"lg\"\r\n                        type=\"submit\"\r\n                    >\r\n                        {(team?.id) ? \"Cập nhật thông tin\" : \"Xác nhận tạo mới\"}\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default FormSubmitTeam\r\n","import React, { useState } from 'react'\r\nimport { Dropdown, Image, ListGroup } from 'react-bootstrap'\r\nimport { BiEdit, BiInfoSquare, BiTrash } from 'react-icons/bi'\r\n\r\nimport moreIcon from '~/assets/icons/more.svg'\r\nimport TeamDetail from './TeamDetail'\r\nimport DeleteTeam from './TeamsFeatures/DeleteTeam'\r\nimport FormSubmitTeam from './TeamsFeatures/FormSubmitTeam'\r\n\r\nconst TeamRow = ({ teamInfo }) => {\r\n    const [visibleTeamDetailUI, setVisibleTeamDetailUI] = useState(false)\r\n    const [visibleEditTeamUI, setVisibleEditTeamUI] = useState(false)\r\n    const [visibleDeleteTeamUI, setVisibleDeleteTeamUI] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <ListGroup.Item\r\n                action\r\n                className=\"position-relative\"\r\n                onDoubleClick={() => setVisibleTeamDetailUI(true)}\r\n            >\r\n                {teamInfo.name}\r\n                <div\r\n                    className=\"position-absolute\"\r\n                    style={{\r\n                        right: \"1rem\",\r\n                        bottom: \"50%\",\r\n                        transform: \"translateY(50%)\"\r\n                    }}\r\n                >\r\n                    <Dropdown className=\"col-auto\">\r\n                        <Dropdown.Toggle variant=\"none\" className=\"text-white\">\r\n                            <Image src={moreIcon} />\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"animate__animated animate__zoomIn animate__faster\">\r\n                            <Dropdown.Item onClick={() => setVisibleTeamDetailUI(true)}>\r\n                                <BiInfoSquare /> Chi tiết\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setVisibleEditTeamUI(true)}>\r\n                                <BiEdit /> Chỉnh sửa\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setVisibleDeleteTeamUI(true)}>\r\n                                <BiTrash /> Xóa\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            </ListGroup.Item>\r\n            {\r\n                visibleTeamDetailUI && <TeamDetail visible={visibleTeamDetailUI} setVisible={setVisibleTeamDetailUI} teamId={teamInfo.id} />\r\n            }\r\n            {\r\n                visibleEditTeamUI && <FormSubmitTeam visible={visibleEditTeamUI} setVisible={setVisibleEditTeamUI} team={teamInfo} />\r\n            }\r\n            {\r\n                visibleDeleteTeamUI && <DeleteTeam visible={visibleDeleteTeamUI} setVisible={setVisibleDeleteTeamUI} teamInfo={teamInfo} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TeamRow","import React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport FormSubmitTeam from './FormSubmitTeam'\r\n\r\nconst AddTeam = () => {\r\n    const [visible, setVisible] = useState(false)\r\n    return (\r\n        <>\r\n            <Button\r\n                className=\"d-block m-auto\"\r\n                onClick={() => setVisible(!visible)}\r\n            >\r\n                Tạo mới\r\n            </Button>\r\n            <FormSubmitTeam visible={visible} setVisible={setVisible} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTeam","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ListGroup, Modal } from 'react-bootstrap'\r\n\r\nimport { teamsSelector } from '~/redux/selectors'\r\nimport { getTeamList } from '~/redux/teamsSlice'\r\nimport AppSearch from '~/components/AppSearch'\r\nimport TeamRow from './TeamRow'\r\nimport AddTeam from './TeamsFeatures/AddTeam'\r\nimport Loading from '~/components/Loading'\r\n\r\nconst TeamsMainPage = ({ visible, setVisible }) => {\r\n    const isLoading = useSelector(teamsSelector).status\r\n    const teams = useSelector(teamsSelector).teams\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [filters, setFilters] = useState({\r\n        name: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getTeamList(filters))\r\n    }, [filters])\r\n\r\n    const handleSearchTerm = (searchTerm) => {\r\n        setFilters({\r\n            name: searchTerm\r\n        })\r\n    }\r\n    //\r\n\r\n    return (\r\n        <Modal\r\n            className=\"modal-fullheight\"\r\n            size=\"md\"\r\n            scrollable\r\n            show={visible}\r\n            onHide={() => setVisible(false)}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    Đội nhóm\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"row align-content-between justify-content-between bg-light p-3\">\r\n                    <div className=\"col\">\r\n                        <AppSearch\r\n                            value={filters.name}\r\n                            onSearch={handleSearchTerm}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <AddTeam />\r\n                    </div>\r\n                </div>\r\n                {\r\n                    isLoading === \"loading\" ? (\r\n                        <Loading />\r\n                    ) : (\r\n                        <ListGroup\r\n                            className=\"mt-3\"\r\n                            variant=\"flush\"\r\n                        >\r\n                            {\r\n                                teams.map((team, index) => (\r\n                                    <TeamRow\r\n                                        key={index}\r\n                                        teamInfo={team}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </ListGroup>\r\n                    )\r\n                }\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default TeamsMainPage","import React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport Teams from './TeamsMainPage'\r\n\r\nconst ButtonShowTeams = () => {\r\n    const [visible, setVisible] = useState(false)\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"outline-primary\"\r\n                onClick={() => setVisible(!visible)}\r\n            >\r\n                <span className=\"fw-bold\">\r\n                    Đội nhóm\r\n                </span>\r\n            </Button>\r\n            {\r\n                visible && <Teams visible={visible} setVisible={setVisible} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ButtonShowTeams","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { Button, Form, Modal, Table } from \"react-bootstrap\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport rolesApi from \"~/api/rolesApi\"\r\nimport { addRole, updateRole } from \"~/redux/rolesSlice\"\r\n\r\nconst FormSubmitRole = ({ visible, setVisible, roleId = null }) => {\r\n    const dispatch = useDispatch()\r\n    /* Quản lý các state */\r\n    const [roleInfo, setRoleInfo] = useState({\r\n        // State lưu thông tin của vai trò khi người dùng nhập dữ liệu\r\n        name: \"\",\r\n        createBy: null,\r\n        modifyBy: null,\r\n        options: [\r\n            {\r\n                id: 1,\r\n                name: \"todolist\",\r\n                label: \"Công việc\",\r\n                permissions: [\r\n                    {\r\n                        id: 1,\r\n                        name: \"view\",\r\n                        label: \"Xem\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: \"create\",\r\n                        label: \"Tạo\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        name: \"update\",\r\n                        label: \"Sửa\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        name: \"delete\",\r\n                        label: \"Xoá\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 5,\r\n                        name: \"view_all\",\r\n                        label: \"Xem hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        name: \"update_all\",\r\n                        label: \"Sửa hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 7,\r\n                        name: \"delete_all\",\r\n                        label: \"Xoá hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 8,\r\n                        name: \"import\",\r\n                        label: \"Thêm sinh viên bằng file excel\",\r\n                        selected: false,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"request\",\r\n                label: \"Đề xuất\",\r\n                permissions: [\r\n                    {\r\n                        id: 1,\r\n                        name: \"view\",\r\n                        label: \"Xem\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: \"create\",\r\n                        label: \"Tạo\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        name: \"update\",\r\n                        label: \"Sửa\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        name: \"delete\",\r\n                        label: \"Xoá\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 5,\r\n                        name: \"view_all\",\r\n                        label: \"Xem hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        name: \"update_all\",\r\n                        label: \"Sửa hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 7,\r\n                        name: \"delete_all\",\r\n                        label: \"Xoá hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 8,\r\n                        name: \"import\",\r\n                        label: \"Thêm sinh viên bằng file excel\",\r\n                        selected: false,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: 3,\r\n                name: \"type\",\r\n                label: \"Loại đề xuất\",\r\n                permissions: [\r\n                    {\r\n                        id: 1,\r\n                        name: \"view\",\r\n                        label: \"Xem\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: \"create\",\r\n                        label: \"Tạo\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        name: \"update\",\r\n                        label: \"Sửa\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        name: \"delete\",\r\n                        label: \"Xoá\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 5,\r\n                        name: \"view_all\",\r\n                        label: \"Xem hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        name: \"update_all\",\r\n                        label: \"Sửa hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 7,\r\n                        name: \"delete_all\",\r\n                        label: \"Xoá hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 8,\r\n                        name: \"import\",\r\n                        label: \"Thêm sinh viên bằng file excel\",\r\n                        selected: false,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: 4,\r\n                name: \"employee\",\r\n                label: \"Nhân viên\",\r\n                permissions: [\r\n                    {\r\n                        id: 1,\r\n                        name: \"view\",\r\n                        label: \"Xem\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: \"create\",\r\n                        label: \"Tạo\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        name: \"update\",\r\n                        label: \"Sửa\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        name: \"delete\",\r\n                        label: \"Xoá\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 5,\r\n                        name: \"view_all\",\r\n                        label: \"Xem hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        name: \"update_all\",\r\n                        label: \"Sửa hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 7,\r\n                        name: \"delete_all\",\r\n                        label: \"Xoá hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 8,\r\n                        name: \"import\",\r\n                        label: \"Thêm sinh viên bằng file excel\",\r\n                        selected: false,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: 5,\r\n                name: \"department\",\r\n                label: \"Phòng ban\",\r\n                permissions: [\r\n                    {\r\n                        id: 1,\r\n                        name: \"view\",\r\n                        label: \"Xem\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: \"create\",\r\n                        label: \"Tạo\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        name: \"update\",\r\n                        label: \"Sửa\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        name: \"delete\",\r\n                        label: \"Xoá\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 5,\r\n                        name: \"view_all\",\r\n                        label: \"Xem hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        name: \"update_all\",\r\n                        label: \"Sửa hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 7,\r\n                        name: \"delete_all\",\r\n                        label: \"Xoá hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 8,\r\n                        name: \"import\",\r\n                        label: \"Thêm sinh viên bằng file excel\",\r\n                        selected: false,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: 6,\r\n                name: \"position\",\r\n                label: \"Chức vụ\",\r\n                permissions: [\r\n                    {\r\n                        id: 1,\r\n                        name: \"view\",\r\n                        label: \"Xem\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: \"create\",\r\n                        label: \"Tạo\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        name: \"update\",\r\n                        label: \"Sửa\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        name: \"delete\",\r\n                        label: \"Xoá\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 5,\r\n                        name: \"view_all\",\r\n                        label: \"Xem hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        name: \"update_all\",\r\n                        label: \"Sửa hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 7,\r\n                        name: \"delete_all\",\r\n                        label: \"Xoá hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 8,\r\n                        name: \"import\",\r\n                        label: \"Thêm sinh viên bằng file excel\",\r\n                        selected: false,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: 7,\r\n                name: \"inventory\",\r\n                label: \"Kho\",\r\n                permissions: [\r\n                    {\r\n                        id: 1,\r\n                        name: \"view\",\r\n                        label: \"Xem\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: \"create\",\r\n                        label: \"Tạo\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        name: \"update\",\r\n                        label: \"Sửa\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        name: \"delete\",\r\n                        label: \"Xoá\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 5,\r\n                        name: \"view_all\",\r\n                        label: \"Xem hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        name: \"update_all\",\r\n                        label: \"Sửa hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 7,\r\n                        name: \"delete_all\",\r\n                        label: \"Xoá hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 8,\r\n                        name: \"import\",\r\n                        label: \"Thêm sinh viên bằng file excel\",\r\n                        selected: false,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: 8,\r\n                name: \"team\",\r\n                label: \"Đội nhóm\",\r\n                permissions: [\r\n                    {\r\n                        id: 1,\r\n                        name: \"view\",\r\n                        label: \"Xem\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: \"create\",\r\n                        label: \"Tạo\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        name: \"update\",\r\n                        label: \"Sửa\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        name: \"delete\",\r\n                        label: \"Xoá\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 5,\r\n                        name: \"view_all\",\r\n                        label: \"Xem hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        name: \"update_all\",\r\n                        label: \"Sửa hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 7,\r\n                        name: \"delete_all\",\r\n                        label: \"Xoá hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 8,\r\n                        name: \"import\",\r\n                        label: \"Thêm sinh viên bằng file excel\",\r\n                        selected: false,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: 9,\r\n                name: \"role\",\r\n                label: \"Vai trò\",\r\n                permissions: [\r\n                    {\r\n                        id: 1,\r\n                        name: \"view\",\r\n                        label: \"Xem\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: \"create\",\r\n                        label: \"Tạo\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        name: \"update\",\r\n                        label: \"Sửa\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        name: \"delete\",\r\n                        label: \"Xoá\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 5,\r\n                        name: \"view_all\",\r\n                        label: \"Xem hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        name: \"update_all\",\r\n                        label: \"Sửa hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 7,\r\n                        name: \"delete_all\",\r\n                        label: \"Xoá hết\",\r\n                        selected: false,\r\n                    },\r\n                    {\r\n                        id: 8,\r\n                        name: \"import\",\r\n                        label: \"Thêm sinh viên bằng file excel\",\r\n                        selected: false,\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        positions: [],\r\n    })\r\n    //\r\n\r\n    // Biến lưu tất cả các chức năng của các quyền trên\r\n    const detailOptions = roleInfo.options\r\n    // Biến lưu tất cả các quyền\r\n    const detailPermissions = roleInfo.options[0].permissions\r\n\r\n    useEffect(() => {\r\n        if (roleId) {\r\n            rolesApi.getRoleDetailById(roleId)\r\n                .then((response) => {\r\n                    setRoleInfo(response.data.data)\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    /* Các hàm thay đổi giá trị của state roleInfo mỗi khi người dùng nhập/chọn dữ liệu mới */\r\n    const handleInputChange = (e) => {\r\n        setRoleInfo({\r\n            ...roleInfo,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n    const handleCheck = (option_index, permission_index) => {\r\n        const startOptions = roleInfo.options.slice(0, option_index) || []\r\n        const endOptions = roleInfo.options.slice(option_index + 1, roleInfo.options.length + 1) || []\r\n\r\n        const startPermissions = roleInfo.options[option_index].permissions.slice(0, permission_index) || []\r\n        const endPermissions =\r\n            roleInfo.options[option_index].permissions.slice(permission_index + 1, roleInfo.options[option_index].permissions.length + 1) || []\r\n\r\n        setRoleInfo({\r\n            ...roleInfo,\r\n            options: [\r\n                ...startOptions,\r\n                {\r\n                    ...roleInfo.options[option_index],\r\n                    permissions: [\r\n                        ...startPermissions,\r\n                        {\r\n                            ...roleInfo.options[option_index].permissions[permission_index],\r\n                            selected: !roleInfo.options[option_index].permissions[permission_index].selected,\r\n                        },\r\n                        ...endPermissions,\r\n                    ],\r\n                },\r\n                ...endOptions,\r\n            ],\r\n        })\r\n    }\r\n\r\n    //\r\n    const handleCheckAll = (option_index) => {\r\n        const startOptions = roleInfo.options.slice(0, option_index) || []\r\n        const endOptions = roleInfo.options.slice(option_index + 1, roleInfo.options.length + 1) || []\r\n        const isAllTrue = roleInfo.options[option_index]?.permissions.every((permission) => permission.selected === true)\r\n        setRoleInfo({\r\n            ...roleInfo,\r\n            options: [\r\n                ...startOptions,\r\n                {\r\n                    ...roleInfo.options[option_index],\r\n                    permissions: roleInfo.options[option_index]?.permissions.map((permission) => {\r\n                        return {\r\n                            ...permission,\r\n                            selected: isAllTrue ? false : true,\r\n                        }\r\n                    }),\r\n                },\r\n                ...endOptions,\r\n            ],\r\n        })\r\n    }\r\n    //\r\n\r\n    /* Xử lý Submit Form */\r\n    const [validated, setValidated] = useState(false)\r\n    const handleSubmit = (e) => {\r\n        const form = e.currentTarget\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n        }\r\n        setValidated(true)\r\n        if (form.checkValidity() === true) {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            if (roleInfo.id) {\r\n                dispatch(\r\n                    updateRole({\r\n                        ...roleInfo,\r\n                        modifyBy: JSON.parse(localStorage.getItem(\"userInfo\")).id,\r\n                    })\r\n                )\r\n            } else {\r\n                dispatch(\r\n                    addRole({\r\n                        ...roleInfo,\r\n                        createBy: JSON.parse(localStorage.getItem(\"userInfo\")).id,\r\n                        modifyBy: null,\r\n                    })\r\n                )\r\n            }\r\n            setVisible(false)\r\n        }\r\n    }\r\n    //\r\n\r\n    return (\r\n        <Modal className=\"modal-fullheight\" size=\"lg\" scrollable show={visible} onHide={() => setVisible(false)}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{roleInfo.id ? \"CHỈNH SỬA VAI TRÒ\" : \"THÊM VAI TRÒ MỚI\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <div className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"name\">Tên vai trò:</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"name\" placeholder=\"Nhập tên vai trò...\" value={roleInfo.name} onChange={handleInputChange} required />\r\n                        <Form.Control.Feedback type=\"invalid\">Vui lòng nhập tên vai trò.</Form.Control.Feedback>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"permissions\">Quyền:</Form.Label>\r\n                        <Table borderless>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td></td>\r\n                                    {detailPermissions.map((detailPermission, permission_index) => (\r\n                                        <td key={permission_index}>{detailPermission.label}</td>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {detailOptions.map((detailOption, option_index) => (\r\n                                    <tr key={option_index}>\r\n                                        <td>\r\n                                            <Form.Check\r\n                                                type=\"checkbox\"\r\n                                                name={detailOption.name}\r\n                                                label={detailOption.label + \":\"}\r\n                                                checked={roleInfo.options[option_index].permissions.every(\r\n                                                    (detailPermission) => detailPermission.selected === true\r\n                                                )}\r\n                                                onChange={() => handleCheckAll(option_index)}\r\n                                            />\r\n                                        </td>\r\n                                        {detailPermissions.map((detailPermission, permission_index) => (\r\n                                            <td key={permission_index + 1}>\r\n                                                <Form.Check\r\n                                                    type=\"checkbox\"\r\n                                                    name={detailPermission.name}\r\n                                                    checked={roleInfo.options[option_index].permissions[permission_index].selected}\r\n                                                    onChange={() => handleCheck(option_index, permission_index)}\r\n                                                />\r\n                                            </td>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <Modal.Footer>\r\n                        <Button className=\"d-table m-auto\" size=\"lg\" type=\"submit\">\r\n                            {roleInfo.id ? \"Cập nhật thông tin\" : \"Xác nhận tạo mới\"}\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default FormSubmitRole\r\n","import React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { BiEdit } from 'react-icons/bi'\r\n\r\nimport FormSubmitRole from './FormSubmitRole'\r\n\r\n\r\nconst EditRole = ({ roleId }) => {\r\n\r\n    const [visibleEdit, setVisibleEdit] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"warning\"\r\n                className=\"col-auto\"\r\n                onClick={() => setVisibleEdit(true)}\r\n            >\r\n                <BiEdit /> <span className=\"ps-1\">Chỉnh sửa</span>\r\n            </Button>\r\n            <FormSubmitRole visible={visibleEdit} setVisible={setVisibleEdit} roleId={roleId} />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default EditRole","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { BiTrash } from 'react-icons/bi'\r\n\r\nimport { deleteRole } from '~/redux/rolesSlice'\r\n\r\n\r\nconst DeleteRole = ({ roleId }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const handleDelete = (roleId) => {\r\n        dispatch(deleteRole(roleId))\r\n        setVisible(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"danger\"\r\n                className=\"col-auto\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <BiTrash /> <span className=\"ps-1\">Xóa</span>\r\n            </Button>\r\n            {\r\n                visible && (\r\n                    <Modal\r\n                        scrollable\r\n                        show={visible}\r\n                        onHide={() => setVisible(false)}\r\n                    >\r\n                        <Modal.Header>\r\n                            <Modal.Title>XÓA VAI TRÒ</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            Bạn có chắc muốn xóa vai trò này khỏi KTX?\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                onClick={() => setVisible(false)}\r\n                            >\r\n                                Hủy\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"danger\"\r\n                                onClick={() => handleDelete(roleId)}\r\n                            >\r\n                                Đồng ý\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeleteRole","import React from 'react'\r\nimport { Accordion, ListGroup, Table } from 'react-bootstrap'\r\n\r\nimport EditRole from './RolesFeatures/EditRole'\r\nimport DeleteRole from './DeleteRole'\r\n\r\nconst RoleItem = ({ role }) => {\r\n    return (\r\n        <>\r\n            <Accordion.Header>\r\n                {role.name}\r\n            </Accordion.Header>\r\n            <Accordion.Body>\r\n                <ListGroup.Item>\r\n                    <div className=\"row justify-content-around\">\r\n                        <EditRole roleId={role.id} />\r\n                        <DeleteRole roleId={role.id} />\r\n                    </div>\r\n                </ListGroup.Item>\r\n                {\r\n                    role.positions?.length === 0 ? <div className=\"list-group-item bg-light\">Vai trò này chưa có chức vụ nào nắm giữ</div> : (\r\n                        <Table\r\n                            striped\r\n                            hover\r\n                            responsive\r\n                            borderless\r\n                        >\r\n                            <thead>\r\n                                <tr className=\"fs-5\">\r\n                                    <td>CHỨC VỤ</td>\r\n                                    <td>PHÒNG BAN</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    role.positions?.map(position => (\r\n                                        <tr key={position.id}>\r\n                                            <td>{position.name}</td>\r\n                                            <td>{position.department?.name}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                }\r\n            </Accordion.Body>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RoleItem","import React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport FormSubmitRole from './FormSubmitRole'\r\n\r\n\r\nconst AddRole = () => {\r\n\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"primary\"\r\n                onClick={() => setVisible(!visible)}\r\n            >\r\n                Tạo mới\r\n            </Button>\r\n            <FormSubmitRole visible={visible} setVisible={setVisible} />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AddRole","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Accordion, Modal } from 'react-bootstrap'\r\n\r\nimport { getRoleList } from '~/redux/rolesSlice'\r\nimport { rolesSelector } from '~/redux/selectors'\r\nimport AppPagination from '~/components/AppPagination'\r\nimport AppSearch from '~/components/AppSearch'\r\nimport RoleItem from './RoleItem'\r\nimport AddRole from './RolesFeatures/AddRole'\r\nimport Loading from '~/components/Loading'\r\n\r\nconst RolesMainPage = ({ visible, setVisible }) => {\r\n    const isLoading = useSelector(rolesSelector).status\r\n    const roles = useSelector(rolesSelector).roles\r\n    const pagination = useSelector(rolesSelector).pagination\r\n    const dispatch = useDispatch()\r\n    const [filters, setFilters] = useState({})\r\n\r\n    useEffect(() => {\r\n        dispatch(getRoleList(filters))\r\n    }, [filters])\r\n\r\n    const handlePageChange = newPage => {\r\n        setFilters({\r\n            ...filters,\r\n            page: newPage\r\n        })\r\n    }\r\n    const handleSearchTerm = searchTerm => {\r\n        setFilters({\r\n            ...filters,\r\n            page: 1,\r\n            name: searchTerm\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <Modal\r\n                className=\"modal-fullheight\"\r\n                size=\"md\"\r\n                scrollable\r\n                show={visible}\r\n                onHide={() => setVisible(false)}\r\n            >\r\n                <Modal.Header closeButton className=\"bg-gradient\">\r\n                    <Modal.Title>VAI TRÒ</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"row align-content-between justify-content-between bg-light p-3\">\r\n                        <div className=\"col\">\r\n                            <AppSearch onSearch={handleSearchTerm} />\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            <AddRole />\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        isLoading === \"loading\" ? (\r\n                            <Loading />\r\n                        ) : (\r\n                            <Accordion flush alwaysOpen>\r\n                                {\r\n                                    roles?.map(role => (\r\n                                        <Accordion.Item\r\n                                            eventKey={role.id}\r\n                                            key={role.id}\r\n                                        >\r\n                                            <RoleItem role={role} />\r\n                                        </Accordion.Item>\r\n                                    ))\r\n                                }\r\n                            </Accordion>\r\n                        )\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"justify-content-center\">\r\n                    <AppPagination\r\n                        pagination={pagination}\r\n                        onPageChange={handlePageChange}\r\n                    />\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RolesMainPage","import React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport Roles from './RolesMainPage'\r\n\r\nconst ButtonShowRoles = () => {\r\n\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"outline-primary\"\r\n                onClick={() => setVisible(!visible)}\r\n            >\r\n                <span className=\"fw-bold\">\r\n                    Vai trò\r\n                </span>\r\n            </Button>\r\n            {\r\n                visible && <Roles visible={visible} setVisible={setVisible} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ButtonShowRoles","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDownload(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 21,\n    height: 26,\n    viewBox: \"0 0 21 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.33642 22.592H18.8369C19.1853 22.5921 19.5207 22.7244 19.7752 22.9623C20.0298 23.2001 20.1846 23.5257 20.2083 23.8733C20.2321 24.2209 20.123 24.5645 19.9032 24.8347C19.6833 25.105 19.3691 25.2817 19.0239 25.3292L18.8369 25.3421H2.33642C1.98803 25.3419 1.65267 25.2096 1.3981 24.9718C1.14353 24.7339 0.988738 24.4083 0.964992 24.0607C0.941246 23.7132 1.05032 23.3695 1.27018 23.0993C1.49003 22.829 1.80427 22.6523 2.14941 22.6048L2.33642 22.592H18.8369H2.33642ZM10.3997 0.604119L10.5867 0.591286C10.9189 0.5913 11.24 0.711634 11.4904 0.930036C11.7408 1.14844 11.9037 1.45013 11.9489 1.77932L11.9617 1.96633V16.0614L16.096 11.929C16.3292 11.6959 16.6383 11.5543 16.9671 11.5301C17.2959 11.5059 17.6224 11.6006 17.8872 11.797L18.0412 11.929C18.2743 12.1621 18.4159 12.4713 18.4401 12.8001C18.4643 13.1288 18.3696 13.4554 18.1732 13.7202L18.0412 13.8742L11.5584 20.3552C11.3255 20.5881 11.0169 20.7297 10.6885 20.7543C10.3601 20.7788 10.0338 20.6847 9.76898 20.4891L9.61497 20.3552L3.13211 13.8742C2.88608 13.6288 2.74206 13.2994 2.729 12.9522C2.71594 12.605 2.83482 12.2657 3.06173 12.0026C3.28863 11.7395 3.60675 11.572 3.95211 11.5338C4.29746 11.4957 4.64446 11.5897 4.92333 11.797L5.07733 11.929L9.21163 16.0651V1.96633C9.21164 1.63405 9.33198 1.31301 9.55038 1.06259C9.76878 0.812174 10.0705 0.649309 10.3997 0.604119L10.5867 0.591286L10.3997 0.604119Z\",\n    fill: \"#2F6BB1\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDownload);\nexport default __webpack_public_path__ + \"static/media/download.6e89cca5c601e81ddad041c67bf9b1e7.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport { CSVLink } from 'react-csv'\r\n\r\nimport downloadIcon from '~/assets/icons/download.svg'\r\n\r\nconst ExportDataToCSV = ({ data }) => {\r\n    let dataReport = data.map(item => {\r\n        return {\r\n            ...item,\r\n            gender: item.gender === 0 ? \"Nữ\" : \"Nam\",\r\n            username: item.user.enableLogin === true ? item.user.username : \"Không được đăng nhập\",\r\n            active: item.active === true ? \"Đang hoạt động\" : \"Không hoạt động\",\r\n            departments: item.departments?.length > 0 ? item.departments.map(department => {\r\n                return \"\" + department.name + \":\" + department.position.name\r\n            }).join(\"\\n\") : \"Chưa ở trong bất phòng ban nào\",\r\n            teams: item.teams?.length > 0 ? item.teams.map(team => {\r\n                return \"\" + team.name + \":\" + team.position.name\r\n            }).join(\"\\n\") : \"Chưa tham gia đội nhóm\"\r\n        }\r\n    })\r\n    const headers = [\r\n        { label: \"Id\", key: \"id\" },\r\n        { label: \"Mã\", key: \"code\" },\r\n        { label: \"Họ và tên\", key: \"name\" },\r\n        { label: \"Ngày sinh\", key: \"dateOfBirth\" },\r\n        { label: \"Email\", key: \"email\" },\r\n        { label: \"Số điện thoại\", key: \"phoneNumber\" },\r\n        { label: \"Link ảnh đại diện\", key: \"avatar\" },\r\n        { label: \"Giới tính\", key: \"gender\" },\r\n        { label: \"Tên người dùng\", key: \"username\" },\r\n        { label: \"Trạng thái hoạt động\", key: \"active\" },\r\n        { label: \"Ngày tạo\", key: \"createDate\" },\r\n        { label: \"Tạo bởi\", key: \"createBy\" },\r\n        { label: \"Ngày chỉnh sửa\", key: \"nodifyDate\" },\r\n        { label: \"Chỉnh sửa bởi\", key: \"modifyBy\" },\r\n        { label: \"Danh sách phòng ban\", key: \"departments\" },\r\n        { label: \"Danh sách đội nhóm\", key: \"teams\" }\r\n    ]\r\n    const csvReport = {\r\n        data: dataReport,\r\n        headers: headers,\r\n        filename: \"Employee\" + Date() + \".csv\"\r\n\r\n    }\r\n    return (\r\n        <CSVLink\r\n            {...csvReport}\r\n            className=\"btn\"\r\n        >\r\n            <img src={downloadIcon} alt=\"Download icon\" />\r\n        </CSVLink>\r\n    )\r\n}\r\n\r\nexport default ExportDataToCSV","import React, { useState } from 'react'\r\nimport { Button, Form, Offcanvas } from 'react-bootstrap'\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst FiltersAdvanced = ({ visible, setVisible, filters, setFilters }) => {\r\n\r\n    /* Xử lý Form với Formik */\r\n    let initialValues = filters\r\n\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string(),\r\n        dob: Yup.date(),\r\n        email: Yup.string(),\r\n        phone: Yup.string(),\r\n        dep: Yup.string(),\r\n        pos: Yup.string()\r\n    })\r\n\r\n    const handleSubmit = async (values, actions) => {\r\n        actions.setSubmitting(true)\r\n        setFilters({\r\n            ...filters,\r\n            ...values\r\n        })\r\n        actions.setSubmitting(false)\r\n    }\r\n    //\r\n\r\n    return (\r\n        <Offcanvas\r\n            show={visible}\r\n            onHide={() => setVisible(false)}\r\n            scroll={true}\r\n            backdrop\r\n            placement=\"end\"\r\n            responsive=\"lg\"\r\n        >\r\n            <Offcanvas.Header className=\"bg-gradient text-white\" closeButton>\r\n                <Offcanvas.Title>\r\n                    <div className=\"fw-bolder\">\r\n                        Lọc nâng cao\r\n                    </div>\r\n                </Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    {\r\n                        ({ values, handleChange, handleBlur, handleSubmit }) => (\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <div className=\"mb-4\">\r\n                                    <Form.Label>Họ và tên:</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Nhập họ và tên...\"\r\n                                        value={values.name}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <Form.Label>Ngày sinh:</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"date\"\r\n                                        name=\"dob\"\r\n                                        value={values.dob}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <Form.Label>Email:</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Nhập email...\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <Form.Label>Số điện thoại:</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Nhập số điện thoại...\"\r\n                                        value={values.phone}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <Form.Label>Phòng ban:</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"dep\"\r\n                                        placeholder=\"Nhập tên phòng ban...\"\r\n                                        value={values.dep}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <Form.Label>Chức vụ:</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"pos\"\r\n                                        placeholder=\"Nhập tên chức vụ...\"\r\n                                        value={values.pos}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </div>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    className=\"d-table m-auto\"\r\n                                >\r\n                                    Áp dụng\r\n                                </Button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    )\r\n}\r\n\r\nexport default FiltersAdvanced","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { AiOutlineSortAscending, AiOutlineSortDescending } from 'react-icons/ai'\r\nimport { BiArrowFromTop, BiSortAlt2 } from 'react-icons/bi'\r\nimport { Button, Card, Container, Dropdown } from 'react-bootstrap'\r\n\r\nimport { getEmployeeList } from '~/redux/employeesSlice'\r\nimport { employeesSelector } from '~/redux/selectors'\r\nimport AppPagination from '~/components/AppPagination'\r\nimport EmployeeRow from './EmployeeRow'\r\nimport AddEmployee from './EmployeesFeatures/AddEmployee'\r\nimport ButtonShowDepartments from './DepartmentsPage/ButtonShowDepartments'\r\nimport ButtonShowTeams from './TeamsPage/ButtonShowTeams'\r\nimport AppSearch from '~/components/AppSearch'\r\nimport ButtonShowRoles from './RolesPage/ButtonShowRoles'\r\nimport ExportDataToCSV from './EmployeesFeatures/ExportDataToCSV'\r\nimport Loading from '~/components/Loading'\r\nimport FiltersAdvanced from './EmployeesFeatures/FiltersAdvanced'\r\n\r\nconst queryString = require('query-string')\r\n\r\nconst EmployeesMainPage = () => {\r\n    const status = useSelector(employeesSelector).status\r\n    const employees = useSelector(employeesSelector).employees           // Lấy danh sách nhân viên từ redux\r\n    const pagination = useSelector(employeesSelector).pagination         // Lấy dữ liệu phân trang của danh sách nhân viên trên\r\n\r\n    const dispatch = useDispatch()          // Dùng để dispatch các action\r\n    const location = useLocation()          // Lấy thông tin từ URL của trang hiện tại\r\n    const navigation = useNavigate()        // Thực hiện công việc điều hướng trang\r\n\r\n    const [visibleFiltersAdvancedUI, setVisibleFiltersAdvancedUI] = useState(false)\r\n    const [filters, setFilters] = useState({\r\n        page: 1\r\n    })      // State lưu trữ các params truyền vào API để lấy dữ liệu từ Back End\r\n\r\n    useEffect(() => {\r\n        document.title = \"Nhân viên\"     // Thiết lập tiêu đề cho trang\r\n\r\n        // Kiểm tra nếu load lại trang thì giữ nguyên các filter hiện tại\r\n        if (location.search.length > 0) {\r\n            const params = queryString.parse(location.search)     // Lấy danh sách params từ URL\r\n            let newParams = {}      // Lưu danh sách những param khác null\r\n\r\n            // Thực hiện việc loại bỏ những param không có tác dụng phân trang\r\n            for (const [key, value] of Object.entries(params)) {\r\n                if (key !== \"page\") {\r\n                    continue\r\n                }\r\n                newParams[key] = value\r\n            }\r\n\r\n            //\r\n            setFilters(newParams)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const requestUrl = location.pathname + \"?\" + queryString.stringify(filters)         // Lấy RequestURL đã gửi API tới Back End\r\n        dispatch(getEmployeeList(filters))        // Dispatch action getEmployeeList với tham số truyền vào là filters\r\n        navigation(requestUrl)          // Thực hiện điều hướng rới RequestURL đã lấy ở trên\r\n    }, [filters])\r\n\r\n    //  Hàm thay đổi state khi ấn vào trang mới ở phần phân trang\r\n    const handlePageChange = (newPage) => {\r\n        setFilters({\r\n            ...filters,\r\n            page: newPage\r\n        })\r\n    }\r\n\r\n    // Hàm xử lý khi thực hiện tìm kiếm\r\n    const handleSearch = (searchTerm) => {\r\n        setFilters({\r\n            ...filters,\r\n            page: 1,\r\n            name: searchTerm\r\n        })\r\n    }\r\n\r\n    // Hàm xử lý khi thực hiện sắp xếp danh sách nhân viên\r\n    const handleSort = (sortBy) => {\r\n        if (filters.order === null || !filters.order) {       // Nếu đang không sắp xếp thì thực hiện sắp xếp tăng dần\r\n            setFilters({\r\n                ...filters,\r\n                sort: sortBy,\r\n                order: \"asc\"\r\n            })\r\n        }\r\n        else if (filters.order === \"asc\") {         // Nếu đang sắp xếp tăng dần thì thực hiện sắp xếp giảm dần\r\n            setFilters({\r\n                ...filters,\r\n                sort: sortBy,\r\n                order: \"desc\"\r\n            })\r\n        }\r\n        else {                              // Nếu đang sắp xếp giảm dần thì thực hiện trở về ban đầu trước khi sắp xếp\r\n            setFilters({\r\n                ...filters,\r\n                sort: null,\r\n                order: null\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Container fluid>\r\n                <div className=\"row justify-content-xl-between justify-content-end align-items-center\">\r\n                    <div className=\"col-auto fw-bolder fs-5 mb-xl-0 mb-3\">\r\n                        DANH SÁCH NHÂN VIÊN\r\n                    </div>\r\n                    <div className=\"col\" />\r\n                    <div className=\"col-auto mb-xl-0 mb-3 d-sm-block d-none\">\r\n                        <AppSearch value={filters.name} onSearch={handleSearch} />\r\n                    </div>\r\n                    <div className=\"col-auto mb-xl-0 mb-3 d-sm-block d-none\">\r\n                        <ButtonShowDepartments />\r\n                    </div>\r\n                    <div className=\"col-auto mb-xl-0 mb-3 d-sm-block d-none\">\r\n                        <ButtonShowTeams />\r\n                    </div>\r\n                    <div className=\"col-auto mb-xl-0 mb-3 d-sm-block d-none\">\r\n                        <ButtonShowRoles />\r\n                    </div>\r\n                    <div className=\"col-auto mb-xl-0 mb-3 d-sm-block d-none\">\r\n                        <AddEmployee />\r\n                    </div>\r\n                    <div className=\"col-auto mb-xl-0 mb-3 d-sm-block d-none\">\r\n                        <Button\r\n                            variant=\"outline-primary\"\r\n                            onClick={() => setVisibleFiltersAdvancedUI(true)}\r\n                        >\r\n                            <div className=\"fw-bolder\">\r\n                                Lọc nâng cao\r\n                            </div>\r\n                        </Button>\r\n                        <FiltersAdvanced visible={visibleFiltersAdvancedUI} setVisible={setVisibleFiltersAdvancedUI} filters={filters} setFilters={setFilters} />\r\n                    </div>\r\n                    <div className=\"col-auto mb-xl-0 mb-3 d-sm-block d-none\">\r\n                        <ExportDataToCSV data={employees} />\r\n                    </div>\r\n                    <Dropdown autoClose=\"outside\" className=\"col-auto d-sm-none\">\r\n                        <Dropdown.Toggle>\r\n                            <BiArrowFromTop />\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"animate__animated animate__zoomIn animate__faster\">\r\n                            <Dropdown.Item className=\"d-block m-auto\">\r\n                                <AppSearch value={filters.name} onSearch={handleSearch} />\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"d-block m-auto\">\r\n                                <ButtonShowDepartments />\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"d-block m-auto\">\r\n                                <ButtonShowRoles />\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"d-block m-auto\">\r\n                                <AddEmployee />\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"d-block m-auto\">\r\n                                <ExportDataToCSV data={employees} />\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n                <hr />\r\n            </Container>\r\n            <Container fluid>\r\n                <div className=\"employee employee-header\">\r\n                    <div className=\"ms-lg-5\" />\r\n                    <div className=\"employee-active\" />\r\n                    <div className=\"employee-name\">\r\n                        <span\r\n                            className=\"fw-bolder cursor-pointer\"\r\n                            onClick={() => handleSort(\"emp.name\")}\r\n                        >\r\n                            HỌ VÀ TÊN\r\n                            {\r\n                                (filters.sort === \"emp.name\" && filters.order === \"asc\") ? <AiOutlineSortAscending />\r\n                                    : (filters.sort === \"emp.name\" && filters.order === \"desc\") ? <AiOutlineSortDescending />\r\n                                        : <BiSortAlt2 />\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"employee-dob\">\r\n                        <span\r\n                            className=\"fw-bolder cursor-pointer\"\r\n                            onClick={() => handleSort(\"emp.dateOfBirth\")}\r\n                        >\r\n                            NGÀY SINH\r\n                            {\r\n                                (filters.sort === \"emp.dateOfBirth\" && filters.order === \"asc\") ? <AiOutlineSortAscending />\r\n                                    : (filters.sort === \"emp.dateOfBirth\" && filters.order === \"desc\") ? <AiOutlineSortDescending />\r\n                                        : <BiSortAlt2 />\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"employee-email\">\r\n                        <span\r\n                            className=\"fw-bolder cursor-pointer\"\r\n                            onClick={() => handleSort(\"emp.email\")}\r\n                        >\r\n                            EMAIL\r\n                            {\r\n                                (filters.sort === \"emp.email\" && filters.order === \"asc\") ? <AiOutlineSortAscending />\r\n                                    : (filters.sort === \"emp.email\" && filters.order === \"desc\") ? <AiOutlineSortDescending />\r\n                                        : <BiSortAlt2 />\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"employee-phoneNumber\">\r\n                        <span\r\n                            className=\"fw-bolder cursor-pointer\"\r\n                            onClick={() => handleSort(\"emp.phoneNumber\")}\r\n                        >\r\n                            SĐT\r\n                            {\r\n                                (filters.sort === \"emp.phoneNumber\" && filters.order === \"asc\") ? <AiOutlineSortAscending />\r\n                                    : (filters.sort === \"emp.phoneNumber\" && filters.order === \"desc\") ? <AiOutlineSortDescending />\r\n                                        : <BiSortAlt2 />\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"employee-department\">\r\n                        <span\r\n                            className=\"fw-bolder cursor-pointer\"\r\n                            onClick={() => handleSort(\"dep.name\")}\r\n                        >\r\n                            PHÒNG BAN\r\n                            {\r\n                                (filters.sort === \"dep.name\" && filters.order === \"asc\") ? <AiOutlineSortAscending />\r\n                                    : (filters.sort === \"dep.name\" && filters.order === \"desc\") ? <AiOutlineSortDescending />\r\n                                        : <BiSortAlt2 />\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"employee-position\">\r\n                        <span\r\n                            className=\"fw-bolder cursor-pointer\"\r\n                            onClick={() => handleSort(\"pos.name\")}\r\n                        >\r\n                            CHỨC VỤ\r\n                            {\r\n                                (filters.sort === \"pos.name\" && filters.order === \"asc\") ? <AiOutlineSortAscending />\r\n                                    : (filters.sort === \"pos.name\" && filters.order === \"desc\") ? <AiOutlineSortDescending />\r\n                                        : <BiSortAlt2 />\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    status === \"loading\" ? (\r\n                        <Loading />\r\n                    ) : status === \"error\" ? (\r\n                        <div className=\"text-center py-3\">Có lỗi trong quá trình lấy dữ liệu từ Server</div>\r\n                    ) : (\r\n                        <div className=\"list-group-horizontal-lg\">\r\n                            {\r\n                                employees?.map(employee => (\r\n                                    <EmployeeRow\r\n                                        key={employee.id}\r\n                                        employeeInfo={employee}\r\n                                    />\r\n                                ))\r\n                            }\r\n                            {\r\n                                employees?.length === 0 ? (\r\n                                    <Card.Body align=\"center\">\r\n                                        Không có dữ liệu\r\n                                    </Card.Body>\r\n                                ) : null\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n                <AppPagination\r\n                    pagination={{\r\n                        ...pagination,\r\n                        page: filters.page\r\n                    }}\r\n                    onPageChange={handlePageChange}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default EmployeesMainPage"],"names":["AppPagination","pagination","onPageChange","page","limit","totalItem","Number","parseInt","totalPage","Math","ceil","useState","window","innerWidth","width","setWidth","updateWidth","useEffect","addEventListener","removeEventListener","className","Pagination","size","disabled","onClick","Image","src","previousPageIcon","listPage","i","push","fetchListPage","map","pageItem","index","active","nextPageIcon","React","AppSearch","value","onSearch","style","borderRadius","searchIcon","marginTop","type","border","outline","color","fontSize","placeholder","onChange","e","target","props","displayValue","options","onSelect","visible","setVisible","ref","useRef","useOnClickOutside","item","key","action","handler","listener","event","current","contains","document","employeesSelector","state","employees","departmentsSelector","departments","teamsSelector","teams","rolesSelector","roles","tasksSelector","tasks","proposalsSelector","proposals","postsSelector","posts","employeeInfo","dispatch","useDispatch","Modal","scrollable","show","onHide","closeButton","name","Button","variant","employeeId","id","deleteEmployee","updateEmployee","handleLock","employee","visibleResetPassword","setVisibleResetPassword","password","repassword","info","setInfo","handleInputChange","validated","setValidated","Dropdown","component","centered","Form","noValidate","onSubmit","form","currentTarget","checkValidity","preventDefault","stopPropagation","user","htmlFor","isInvalid","currentDepartment","onDepartmentChange","selectDepartmentElement","ListGroup","textAlign","level","recursiveDepartmentChild","department_parent","forEach","department_child","fatherDepartmentId","paddingLeft","departmentLevelIcon","alt","department","readOnly","required","backgroundColor","cursor","padding","positions","selectPositionElement","length","position","currentTeam","onTeamChange","team","useSelector","code","avatar","dateOfBirth","gender","email","phoneNumber","username","enableLogin","setEmployeeInfo","tab","setTab","getDepartmentList","getTeamList","data","find","dp","tm","checked","handleDepartmentChange","newDepartment","newDepartments","handlePositionOfDepartmentChange","handleTeamChange","newTeam","newTeams","handlePositionOfTeamChange","modifyBy","array","hasOwnProperty","createBy","addEmployee","Tabs","activeKey","k","Tab","eventKey","title","filter","idx","handleDeleteFormSelectDepartment","handleDeleteFormSelectTeam","label","visibleEditEmployeeUI","setVisibleEditEmployeeUI","visibleLockEmployeeUI","setVisibleLockEmployeeUI","visibleDeleteEmployeeUI","setVisibleDeleteEmployeeUI","activeStatusElement","height","mainDepartment","reduce","min","Date","getDate","getMonth","getFullYear","showDate","moreIcon","visibleFormAddEmployee","setVisibleFormAddEmployee","departmentId","departmentInfo","setDepartmentInfo","parentName","departmentsApi","then","response","description","Table","striped","hover","responsive","borderless","role","deleteDepartment","getRoleList","tabIndex","start","slice","end","handleRoleChange","newRole","newPositions","Select","some","isManager","handleDelete","fatherDepartment","updateDepartment","addDepartment","as","rows","visibleDepartmentDetailUI","setVisibleDepartmentDetailUI","visibleEditDepartmentUI","setVisibleEditDepartmentUI","visibleDeleteDepartmentUI","setVisibleDeleteDepartmentUI","right","bottom","transform","AddDepartment","status","filters","setFilters","departmentsElement","searchTerm","Loading","teamId","teamInfo","setTeamInfo","teamsApi","deleteTeam","updateTeam","addTeam","visibleTeamDetailUI","setVisibleTeamDetailUI","visibleEditTeamUI","setVisibleEditTeamUI","visibleDeleteTeamUI","setVisibleDeleteTeamUI","onDoubleClick","isLoading","roleId","permissions","selected","roleInfo","setRoleInfo","detailOptions","detailPermissions","rolesApi","updateRole","JSON","parse","localStorage","getItem","addRole","detailPermission","permission_index","detailOption","option_index","every","startOptions","endOptions","isAllTrue","permission","handleCheckAll","startPermissions","endPermissions","handleCheck","visibleEdit","setVisibleEdit","deleteRole","Accordion","flush","alwaysOpen","newPage","csvReport","join","headers","filename","CSVLink","downloadIcon","initialValues","validationSchema","Yup","dob","phone","dep","pos","handleSubmit","values","actions","setSubmitting","Offcanvas","scroll","backdrop","placement","handleChange","handleBlur","onBlur","queryString","require","location","useLocation","navigation","useNavigate","visibleFiltersAdvancedUI","setVisibleFiltersAdvancedUI","search","params","newParams","Object","entries","requestUrl","pathname","stringify","getEmployeeList","handleSearch","handleSort","sortBy","order","sort","Container","fluid","autoClose","Card","align"],"sourceRoot":""}