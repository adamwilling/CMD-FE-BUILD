{"version":3,"file":"static/js/56.3c6ee891.chunk.js","mappings":"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","sources":["views/tasks/TasksAssignedToMe.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom'\r\nimport { AiOutlineSortAscending, AiOutlineSortDescending } from 'react-icons/ai'\r\nimport { BiSortAlt2 } from 'react-icons/bi'\r\nimport { Button, Card, Container } from 'react-bootstrap'\r\nimport clsx from 'clsx'\r\n\r\nimport { getTaskListAssignedToMe } from '~/redux/tasksSlice'\r\nimport { tasksSelector } from '~/redux/selectors'\r\nimport AppPagination from '~/components/AppPagination'\r\nimport TaskRow from './TaskRow'\r\nimport AddTask from './TasksFeatures/AddTask'\r\nimport Loading from '~/components/Loading'\r\nimport FiltersAdvanced from './TasksFeatures/FiltersAdvanced'\r\nimport FiltersByStatusIds from './TasksFeatures/FiltersByStatusIds'\r\n\r\nconst queryString = require('query-string')\r\n\r\nconst TasksAssignedToMe = () => {\r\n    const status = useSelector(tasksSelector).status\r\n    const tasks = useSelector(tasksSelector).tasks\r\n    const pagination = useSelector(tasksSelector).pagination\r\n\r\n    const dispatch = useDispatch()\r\n    const location = useLocation()\r\n    const navigation = useNavigate()\r\n\r\n    const [filtersBase, setFiltersBase] = useState({\r\n        page: 1\r\n    })\r\n    const [filtersAdvanced, setFiltersAdvanced] = useState({\r\n        title: \"\",\r\n        creatorIds: [],\r\n        receiverIds: [],\r\n        startDate: \"\",\r\n        finishDate: \"\",\r\n        statusIds: [],\r\n        statuses: [],\r\n        departmentIds: [],\r\n        rate: \"\",\r\n        priority: \"\",\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        document.title = \"Công việc của tôi\"\r\n\r\n        if (location.search.length > 0) {\r\n            const params = queryString.parse(location.search)\r\n            let newParams = {}\r\n\r\n            for (const [key, value] of Object.entries(params)) {\r\n                if (key !== \"page\") {\r\n                    continue\r\n                }\r\n                newParams[key] = value\r\n            }\r\n\r\n            setFiltersBase(newParams)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const requestUrl = location.pathname + \"?\" + queryString.stringify(filtersBase)\r\n        navigation(requestUrl)\r\n        dispatch(getTaskListAssignedToMe({\r\n            params: filtersBase,\r\n            filters: filtersAdvanced\r\n        }))\r\n    }, [filtersBase, filtersAdvanced])\r\n\r\n    const handlePageChange = (newPage) => {\r\n        setFiltersBase({\r\n            ...filtersBase,\r\n            page: newPage\r\n        })\r\n    }\r\n\r\n    const handleSort = (sortBy) => {\r\n        if (filtersBase.order === null || !filtersBase.order) {\r\n            setFiltersBase({\r\n                ...filtersBase,\r\n                sort: sortBy,\r\n                order: \"asc\"\r\n            })\r\n        }\r\n        else if (filtersBase.order === \"asc\") {\r\n            setFiltersBase({\r\n                ...filtersBase,\r\n                sort: sortBy,\r\n                order: \"desc\"\r\n            })\r\n        }\r\n        else {\r\n            setFiltersBase({\r\n                ...filtersBase,\r\n                sort: null,\r\n                order: null\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Container fluid>\r\n                <div className=\"row justify-content-xl-between justify-content-end align-items-center\">\r\n                    <div className=\"col-auto fw-bolder fs-5 mb-xl-0 mb-3\">\r\n                        CÔNG VIỆC CỦA TÔI\r\n                    </div>\r\n                    <div className=\"col\" />\r\n                    <div className=\"col-auto mb-xl-0 mb-3 d-sm-block d-none\">\r\n                        <AddTask />\r\n                    </div>\r\n                    <div className=\"col-auto mb-xl-0 mb-3 d-sm-block d-none\">\r\n                        <FiltersAdvanced\r\n                            filtersAdvanced={filtersAdvanced}\r\n                            setFiltersAdvanced={setFiltersAdvanced}\r\n                            type=\"assigned-to-me\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-start align-items-center\">\r\n                    <NavLink to=\"/tasks\" end>\r\n                        {\r\n                            ({ isActive }) => <Button className=\"col-auto m-1\" variant={clsx({ \"primary\": isActive, \"outline-primary\": !isActive })}>\r\n                                Tất cả\r\n                            </Button>\r\n                        }\r\n                    </NavLink>\r\n                    <NavLink to=\"/tasks/created-by-me\">\r\n                        {\r\n                            ({ isActive }) => <Button className=\"col-auto m-1\" variant={clsx({ \"primary\": isActive, \"outline-primary\": !isActive })}>\r\n                                Công việc tôi giao\r\n                            </Button>\r\n                        }\r\n                    </NavLink>\r\n                    <NavLink to=\"/tasks/assigned-to-me\">\r\n                        {\r\n                            ({ isActive }) => <Button className=\"col-auto m-1\" variant={clsx({ \"primary\": isActive, \"outline-primary\": !isActive })}>\r\n                                Công việc của tôi\r\n                            </Button>\r\n                        }\r\n                    </NavLink>\r\n                </div>\r\n                <div className=\"d-flex justify-content-start align-items-center\">\r\n                    <FiltersByStatusIds\r\n                        filters={filtersAdvanced}\r\n                        onFiltersChange={(listStatus) => setFiltersAdvanced({\r\n                            ...filtersAdvanced,\r\n                            statuses: listStatus,\r\n                            statusIds: listStatus.map(status => status.id)\r\n                        })}\r\n                    />\r\n                </div>\r\n                <hr />\r\n            </Container>\r\n            <Container fluid>\r\n                <div className=\"task task-header\">\r\n                    <div className=\"ms-lg-5\" />\r\n                    <div className=\"task-title\">\r\n                        <span\r\n                            className=\"fw-bolder cursor-pointer\"\r\n                            onClick={() => handleSort(\"title\")}\r\n                        >\r\n                            TÊN CÔNG VIỆC\r\n                            {\r\n                                (filtersBase.sort === \"title\" && filtersBase.order === \"asc\") ? <AiOutlineSortAscending />\r\n                                    : (filtersBase.sort === \"title\" && filtersBase.order === \"desc\") ? <AiOutlineSortDescending />\r\n                                        : <BiSortAlt2 />\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"task-creator\">\r\n                        <span\r\n                            className=\"fw-bolder cursor-pointer\"\r\n                            onClick={() => handleSort(\"creator.name\")}\r\n                        >\r\n                            NGƯỜI GIAO\r\n                            {\r\n                                (filtersBase.sort === \"creator.name\" && filtersBase.order === \"asc\") ? <AiOutlineSortAscending />\r\n                                    : (filtersBase.sort === \"creator.name\" && filtersBase.order === \"desc\") ? <AiOutlineSortDescending />\r\n                                        : <BiSortAlt2 />\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"task-arrow\" />\r\n                    <div className=\"task-receiver\">\r\n                        <span\r\n                            className=\"fw-bolder cursor-pointer\"\r\n                            onClick={() => handleSort(\"receiver.name\")}\r\n                        >\r\n                            NGƯỜI NHẬN\r\n                            {\r\n                                (filtersBase.sort === \"receiver.name\" && filtersBase.order === \"asc\") ? <AiOutlineSortAscending />\r\n                                    : (filtersBase.sort === \"receiver.name\" && filtersBase.order === \"desc\") ? <AiOutlineSortDescending />\r\n                                        : <BiSortAlt2 />\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"task-timeline\">\r\n                        <span\r\n                            className=\"fw-bolder cursor-pointer\"\r\n                            onClick={() => handleSort(\"startDate\")}\r\n                        >\r\n                            THỜI GIAN\r\n                            {\r\n                                (filtersBase.sort === \"startDate\" && filtersBase.order === \"asc\") ? <AiOutlineSortAscending />\r\n                                    : (filtersBase.sort === \"startDate\" && filtersBase.order === \"desc\") ? <AiOutlineSortDescending />\r\n                                        : <BiSortAlt2 />\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"task-status\">\r\n                        <span\r\n                            className=\"fw-bolder cursor-pointer\"\r\n                            onClick={() => handleSort(\"status.name\")}\r\n                        >\r\n                            TÌNH TRẠNG\r\n                            {\r\n                                (filtersBase.sort === \"status.name\" && filtersBase.order === \"asc\") ? <AiOutlineSortAscending />\r\n                                    : (filtersBase.sort === \"status.name\" && filtersBase.order === \"desc\") ? <AiOutlineSortDescending />\r\n                                        : <BiSortAlt2 />\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"task-rate\">\r\n                        <span\r\n                            className=\"fw-bolder cursor-pointer d-flex justify-content-center\"\r\n                            onClick={() => handleSort(\"priority\")}\r\n                        >\r\n                            ĐÁNH GIÁ\r\n                            {\r\n                                (filtersBase.sort === \"priority\" && filtersBase.order === \"asc\") ? <AiOutlineSortAscending />\r\n                                    : (filtersBase.sort === \"priority\" && filtersBase.order === \"desc\") ? <AiOutlineSortDescending />\r\n                                        : <BiSortAlt2 />\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    status === \"loading\" ? (\r\n                        <Loading />\r\n                    ) : status === \"error\" ? (\r\n                        <div className=\"text-center py-3\">Có lỗi trong quá trình lấy dữ liệu từ Server</div>\r\n                    ) : (\r\n                        <div className=\"list-group-horizontal-lg\">\r\n                            {\r\n                                tasks?.map((task, index) => (\r\n                                    <TaskRow\r\n                                        key={index}\r\n                                        task={task}\r\n                                    />\r\n                                ))\r\n                            }\r\n                            {\r\n                                tasks?.length === 0 ? (\r\n                                    <Card.Body align=\"center\">\r\n                                        Không có dữ liệu\r\n                                    </Card.Body>\r\n                                ) : null\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n                <AppPagination\r\n                    pagination={{\r\n                        ...pagination,\r\n                        page: filtersBase.page\r\n                    }}\r\n                    onPageChange={handlePageChange}\r\n                />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TasksAssignedToMe"],"names":["queryString","require","status","useSelector","tasksSelector","tasks","pagination","dispatch","useDispatch","location","useLocation","navigation","useNavigate","useState","page","filtersBase","setFiltersBase","title","creatorIds","receiverIds","startDate","finishDate","statusIds","statuses","departmentIds","rate","priority","filtersAdvanced","setFiltersAdvanced","useEffect","document","search","length","params","parse","newParams","Object","entries","key","value","requestUrl","pathname","stringify","getTaskListAssignedToMe","filters","handleSort","sortBy","order","sort","fluid","className","type","to","end","isActive","variant","clsx","onFiltersChange","listStatus","map","id","onClick","task","index","align","onPageChange","newPage"],"sourceRoot":""}